(function() {var implementors = {};
implementors["raw_cpuid"] = [{"text":"impl Sync for CpuId","synthetic":true,"types":[]},{"text":"impl Sync for CpuIdResult","synthetic":true,"types":[]},{"text":"impl Sync for VendorInfo","synthetic":true,"types":[]},{"text":"impl Sync for CacheInfoIter","synthetic":true,"types":[]},{"text":"impl Sync for CacheInfo","synthetic":true,"types":[]},{"text":"impl Sync for ProcessorSerial","synthetic":true,"types":[]},{"text":"impl Sync for FeatureInfo","synthetic":true,"types":[]},{"text":"impl Sync for CacheParametersIter","synthetic":true,"types":[]},{"text":"impl Sync for CacheParameter","synthetic":true,"types":[]},{"text":"impl Sync for MonitorMwaitInfo","synthetic":true,"types":[]},{"text":"impl Sync for ThermalPowerInfo","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedFeatures","synthetic":true,"types":[]},{"text":"impl Sync for DirectCacheAccessInfo","synthetic":true,"types":[]},{"text":"impl Sync for PerformanceMonitoringInfo","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedTopologyIter","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedTopologyLevel","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedStateInfo","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedStateIter","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedState","synthetic":true,"types":[]},{"text":"impl Sync for RdtMonitoringInfo","synthetic":true,"types":[]},{"text":"impl Sync for L3MonitoringInfo","synthetic":true,"types":[]},{"text":"impl Sync for RdtAllocationInfo","synthetic":true,"types":[]},{"text":"impl Sync for L3CatInfo","synthetic":true,"types":[]},{"text":"impl Sync for L2CatInfo","synthetic":true,"types":[]},{"text":"impl Sync for MemBwAllocationInfo","synthetic":true,"types":[]},{"text":"impl Sync for SgxInfo","synthetic":true,"types":[]},{"text":"impl Sync for SgxSectionIter","synthetic":true,"types":[]},{"text":"impl Sync for EpcSection","synthetic":true,"types":[]},{"text":"impl Sync for ProcessorTraceInfo","synthetic":true,"types":[]},{"text":"impl Sync for TscInfo","synthetic":true,"types":[]},{"text":"impl Sync for ProcessorFrequencyInfo","synthetic":true,"types":[]},{"text":"impl Sync for DatIter","synthetic":true,"types":[]},{"text":"impl Sync for DatInfo","synthetic":true,"types":[]},{"text":"impl Sync for SoCVendorInfo","synthetic":true,"types":[]},{"text":"impl Sync for SoCVendorAttributesIter","synthetic":true,"types":[]},{"text":"impl Sync for SoCVendorBrand","synthetic":true,"types":[]},{"text":"impl Sync for HypervisorInfo","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedFunctionInfo","synthetic":true,"types":[]},{"text":"impl Sync for MemoryEncryptionInfo","synthetic":true,"types":[]},{"text":"impl Sync for CacheInfoType","synthetic":true,"types":[]},{"text":"impl Sync for CacheType","synthetic":true,"types":[]},{"text":"impl Sync for TopologyType","synthetic":true,"types":[]},{"text":"impl Sync for SgxSectionInfo","synthetic":true,"types":[]},{"text":"impl Sync for DatType","synthetic":true,"types":[]},{"text":"impl Sync for Hypervisor","synthetic":true,"types":[]},{"text":"impl Sync for L2Associativity","synthetic":true,"types":[]}];
implementors["trapframe"] = [{"text":"impl Sync for UserContext","synthetic":true,"types":[]},{"text":"impl Sync for GeneralRegs","synthetic":true,"types":[]}];
implementors["x86_64"] = [{"text":"impl Sync for PrivilegeLevel","synthetic":true,"types":[]},{"text":"impl Sync for VirtAddr","synthetic":true,"types":[]},{"text":"impl Sync for PhysAddr","synthetic":true,"types":[]},{"text":"impl Sync for VirtAddrNotValid","synthetic":true,"types":[]},{"text":"impl Sync for PhysAddrNotValid","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for PortReadOnly&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for PortWriteOnly&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RdRand","synthetic":true,"types":[]},{"text":"impl Sync for Cr0","synthetic":true,"types":[]},{"text":"impl Sync for Cr0Flags","synthetic":true,"types":[]},{"text":"impl Sync for Cr2","synthetic":true,"types":[]},{"text":"impl Sync for Cr3","synthetic":true,"types":[]},{"text":"impl Sync for Cr3Flags","synthetic":true,"types":[]},{"text":"impl Sync for Cr4","synthetic":true,"types":[]},{"text":"impl Sync for Cr4Flags","synthetic":true,"types":[]},{"text":"impl Sync for Msr","synthetic":true,"types":[]},{"text":"impl Sync for Efer","synthetic":true,"types":[]},{"text":"impl Sync for FsBase","synthetic":true,"types":[]},{"text":"impl Sync for GsBase","synthetic":true,"types":[]},{"text":"impl Sync for KernelGsBase","synthetic":true,"types":[]},{"text":"impl Sync for Star","synthetic":true,"types":[]},{"text":"impl Sync for LStar","synthetic":true,"types":[]},{"text":"impl Sync for SFMask","synthetic":true,"types":[]},{"text":"impl Sync for EferFlags","synthetic":true,"types":[]},{"text":"impl Sync for RFlags","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorTablePointer","synthetic":true,"types":[]},{"text":"impl Sync for SegmentSelector","synthetic":true,"types":[]},{"text":"impl Sync for GlobalDescriptorTable","synthetic":true,"types":[]},{"text":"impl Sync for DescriptorFlags","synthetic":true,"types":[]},{"text":"impl Sync for Descriptor","synthetic":true,"types":[]},{"text":"impl Sync for InterruptDescriptorTable","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Entry&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for EntryOptions","synthetic":true,"types":[]},{"text":"impl Sync for InterruptStackFrame","synthetic":true,"types":[]},{"text":"impl Sync for InterruptStackFrameValue","synthetic":true,"types":[]},{"text":"impl Sync for PageFaultErrorCode","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for UnusedPhysFrame&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for PhysFrame&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for PhysFrameRange&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for PhysFrameRangeInclusive&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Sync for MappedPageTable&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for OffsetPageTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RecursivePageTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for MapperFlush&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for MapperFlushAll","synthetic":true,"types":[]},{"text":"impl Sync for TranslateResult","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for MapToError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for UnmapError","synthetic":true,"types":[]},{"text":"impl Sync for FlagUpdateError","synthetic":true,"types":[]},{"text":"impl Sync for TranslateError","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Page&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for PageRange&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for PageRangeInclusive&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Size4KiB","synthetic":true,"types":[]},{"text":"impl Sync for Size2MiB","synthetic":true,"types":[]},{"text":"impl Sync for Size1GiB","synthetic":true,"types":[]},{"text":"impl Sync for PageTableEntry","synthetic":true,"types":[]},{"text":"impl Sync for PageTableFlags","synthetic":true,"types":[]},{"text":"impl Sync for PageTable","synthetic":true,"types":[]},{"text":"impl Sync for PageTableIndex","synthetic":true,"types":[]},{"text":"impl Sync for PageOffset","synthetic":true,"types":[]},{"text":"impl Sync for FrameError","synthetic":true,"types":[]},{"text":"impl Sync for TaskStateSegment","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()