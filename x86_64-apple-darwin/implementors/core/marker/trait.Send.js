(function() {var implementors = {};
implementors["raw_cpuid"] = [{"text":"impl Send for CpuId","synthetic":true,"types":[]},{"text":"impl Send for CpuIdResult","synthetic":true,"types":[]},{"text":"impl Send for VendorInfo","synthetic":true,"types":[]},{"text":"impl Send for CacheInfoIter","synthetic":true,"types":[]},{"text":"impl Send for CacheInfo","synthetic":true,"types":[]},{"text":"impl Send for ProcessorSerial","synthetic":true,"types":[]},{"text":"impl Send for FeatureInfo","synthetic":true,"types":[]},{"text":"impl Send for CacheParametersIter","synthetic":true,"types":[]},{"text":"impl Send for CacheParameter","synthetic":true,"types":[]},{"text":"impl Send for MonitorMwaitInfo","synthetic":true,"types":[]},{"text":"impl Send for ThermalPowerInfo","synthetic":true,"types":[]},{"text":"impl Send for ExtendedFeatures","synthetic":true,"types":[]},{"text":"impl Send for DirectCacheAccessInfo","synthetic":true,"types":[]},{"text":"impl Send for PerformanceMonitoringInfo","synthetic":true,"types":[]},{"text":"impl Send for ExtendedTopologyIter","synthetic":true,"types":[]},{"text":"impl Send for ExtendedTopologyLevel","synthetic":true,"types":[]},{"text":"impl Send for ExtendedStateInfo","synthetic":true,"types":[]},{"text":"impl Send for ExtendedStateIter","synthetic":true,"types":[]},{"text":"impl Send for ExtendedState","synthetic":true,"types":[]},{"text":"impl Send for RdtMonitoringInfo","synthetic":true,"types":[]},{"text":"impl Send for L3MonitoringInfo","synthetic":true,"types":[]},{"text":"impl Send for RdtAllocationInfo","synthetic":true,"types":[]},{"text":"impl Send for L3CatInfo","synthetic":true,"types":[]},{"text":"impl Send for L2CatInfo","synthetic":true,"types":[]},{"text":"impl Send for MemBwAllocationInfo","synthetic":true,"types":[]},{"text":"impl Send for SgxInfo","synthetic":true,"types":[]},{"text":"impl Send for SgxSectionIter","synthetic":true,"types":[]},{"text":"impl Send for EpcSection","synthetic":true,"types":[]},{"text":"impl Send for ProcessorTraceInfo","synthetic":true,"types":[]},{"text":"impl Send for TscInfo","synthetic":true,"types":[]},{"text":"impl Send for ProcessorFrequencyInfo","synthetic":true,"types":[]},{"text":"impl Send for DatIter","synthetic":true,"types":[]},{"text":"impl Send for DatInfo","synthetic":true,"types":[]},{"text":"impl Send for SoCVendorInfo","synthetic":true,"types":[]},{"text":"impl Send for SoCVendorAttributesIter","synthetic":true,"types":[]},{"text":"impl Send for SoCVendorBrand","synthetic":true,"types":[]},{"text":"impl Send for HypervisorInfo","synthetic":true,"types":[]},{"text":"impl Send for ExtendedFunctionInfo","synthetic":true,"types":[]},{"text":"impl Send for MemoryEncryptionInfo","synthetic":true,"types":[]},{"text":"impl Send for CacheInfoType","synthetic":true,"types":[]},{"text":"impl Send for CacheType","synthetic":true,"types":[]},{"text":"impl Send for TopologyType","synthetic":true,"types":[]},{"text":"impl Send for SgxSectionInfo","synthetic":true,"types":[]},{"text":"impl Send for DatType","synthetic":true,"types":[]},{"text":"impl Send for Hypervisor","synthetic":true,"types":[]},{"text":"impl Send for L2Associativity","synthetic":true,"types":[]}];
implementors["trapframe"] = [{"text":"impl Send for UserContext","synthetic":true,"types":[]},{"text":"impl Send for GeneralRegs","synthetic":true,"types":[]}];
implementors["x86_64"] = [{"text":"impl Send for PrivilegeLevel","synthetic":true,"types":[]},{"text":"impl Send for VirtAddr","synthetic":true,"types":[]},{"text":"impl Send for PhysAddr","synthetic":true,"types":[]},{"text":"impl Send for VirtAddrNotValid","synthetic":true,"types":[]},{"text":"impl Send for PhysAddrNotValid","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for PortReadOnly&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for PortWriteOnly&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for RdRand","synthetic":true,"types":[]},{"text":"impl Send for Cr0","synthetic":true,"types":[]},{"text":"impl Send for Cr0Flags","synthetic":true,"types":[]},{"text":"impl Send for Cr2","synthetic":true,"types":[]},{"text":"impl Send for Cr3","synthetic":true,"types":[]},{"text":"impl Send for Cr3Flags","synthetic":true,"types":[]},{"text":"impl Send for Cr4","synthetic":true,"types":[]},{"text":"impl Send for Cr4Flags","synthetic":true,"types":[]},{"text":"impl Send for Msr","synthetic":true,"types":[]},{"text":"impl Send for Efer","synthetic":true,"types":[]},{"text":"impl Send for FsBase","synthetic":true,"types":[]},{"text":"impl Send for GsBase","synthetic":true,"types":[]},{"text":"impl Send for KernelGsBase","synthetic":true,"types":[]},{"text":"impl Send for Star","synthetic":true,"types":[]},{"text":"impl Send for LStar","synthetic":true,"types":[]},{"text":"impl Send for SFMask","synthetic":true,"types":[]},{"text":"impl Send for EferFlags","synthetic":true,"types":[]},{"text":"impl Send for RFlags","synthetic":true,"types":[]},{"text":"impl Send for DescriptorTablePointer","synthetic":true,"types":[]},{"text":"impl Send for SegmentSelector","synthetic":true,"types":[]},{"text":"impl Send for GlobalDescriptorTable","synthetic":true,"types":[]},{"text":"impl Send for DescriptorFlags","synthetic":true,"types":[]},{"text":"impl Send for Descriptor","synthetic":true,"types":[]},{"text":"impl Send for InterruptDescriptorTable","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Entry&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EntryOptions","synthetic":true,"types":[]},{"text":"impl Send for InterruptStackFrame","synthetic":true,"types":[]},{"text":"impl Send for InterruptStackFrameValue","synthetic":true,"types":[]},{"text":"impl Send for PageFaultErrorCode","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for UnusedPhysFrame&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for PhysFrame&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for PhysFrameRange&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for PhysFrameRangeInclusive&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Send for MappedPageTable&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for OffsetPageTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RecursivePageTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for MapperFlush&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for MapperFlushAll","synthetic":true,"types":[]},{"text":"impl Send for TranslateResult","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for MapToError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for UnmapError","synthetic":true,"types":[]},{"text":"impl Send for FlagUpdateError","synthetic":true,"types":[]},{"text":"impl Send for TranslateError","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Page&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for PageRange&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for PageRangeInclusive&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Size4KiB","synthetic":true,"types":[]},{"text":"impl Send for Size2MiB","synthetic":true,"types":[]},{"text":"impl Send for Size1GiB","synthetic":true,"types":[]},{"text":"impl Send for PageTableEntry","synthetic":true,"types":[]},{"text":"impl Send for PageTableFlags","synthetic":true,"types":[]},{"text":"impl Send for PageTable","synthetic":true,"types":[]},{"text":"impl Send for PageTableIndex","synthetic":true,"types":[]},{"text":"impl Send for PageOffset","synthetic":true,"types":[]},{"text":"impl Send for FrameError","synthetic":true,"types":[]},{"text":"impl Send for TaskStateSegment","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()