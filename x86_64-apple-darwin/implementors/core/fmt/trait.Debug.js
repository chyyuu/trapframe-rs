(function() {var implementors = {};
implementors["raw_cpuid"] = [{"text":"impl Debug for CpuId","synthetic":false,"types":[]},{"text":"impl Debug for CpuIdResult","synthetic":false,"types":[]},{"text":"impl Debug for VendorInfo","synthetic":false,"types":[]},{"text":"impl Debug for CacheInfoIter","synthetic":false,"types":[]},{"text":"impl Debug for CacheInfoType","synthetic":false,"types":[]},{"text":"impl Debug for CacheInfo","synthetic":false,"types":[]},{"text":"impl Debug for ProcessorSerial","synthetic":false,"types":[]},{"text":"impl Debug for FeatureInfo","synthetic":false,"types":[]},{"text":"impl Debug for CacheParametersIter","synthetic":false,"types":[]},{"text":"impl Debug for CacheParameter","synthetic":false,"types":[]},{"text":"impl Debug for CacheType","synthetic":false,"types":[]},{"text":"impl Debug for MonitorMwaitInfo","synthetic":false,"types":[]},{"text":"impl Debug for ThermalPowerInfo","synthetic":false,"types":[]},{"text":"impl Debug for ExtendedFeatures","synthetic":false,"types":[]},{"text":"impl Debug for DirectCacheAccessInfo","synthetic":false,"types":[]},{"text":"impl Debug for PerformanceMonitoringInfo","synthetic":false,"types":[]},{"text":"impl Debug for ExtendedTopologyIter","synthetic":false,"types":[]},{"text":"impl Debug for ExtendedTopologyLevel","synthetic":false,"types":[]},{"text":"impl Debug for TopologyType","synthetic":false,"types":[]},{"text":"impl Debug for ExtendedStateInfo","synthetic":false,"types":[]},{"text":"impl Debug for ExtendedStateIter","synthetic":false,"types":[]},{"text":"impl Debug for ExtendedState","synthetic":false,"types":[]},{"text":"impl Debug for RdtMonitoringInfo","synthetic":false,"types":[]},{"text":"impl Debug for L3MonitoringInfo","synthetic":false,"types":[]},{"text":"impl Debug for RdtAllocationInfo","synthetic":false,"types":[]},{"text":"impl Debug for L3CatInfo","synthetic":false,"types":[]},{"text":"impl Debug for L2CatInfo","synthetic":false,"types":[]},{"text":"impl Debug for MemBwAllocationInfo","synthetic":false,"types":[]},{"text":"impl Debug for SgxInfo","synthetic":false,"types":[]},{"text":"impl Debug for SgxSectionIter","synthetic":false,"types":[]},{"text":"impl Debug for SgxSectionInfo","synthetic":false,"types":[]},{"text":"impl Debug for EpcSection","synthetic":false,"types":[]},{"text":"impl Debug for ProcessorTraceInfo","synthetic":false,"types":[]},{"text":"impl Debug for TscInfo","synthetic":false,"types":[]},{"text":"impl Debug for ProcessorFrequencyInfo","synthetic":false,"types":[]},{"text":"impl Debug for DatIter","synthetic":false,"types":[]},{"text":"impl Debug for DatInfo","synthetic":false,"types":[]},{"text":"impl Debug for DatType","synthetic":false,"types":[]},{"text":"impl Debug for SoCVendorInfo","synthetic":false,"types":[]},{"text":"impl Debug for SoCVendorAttributesIter","synthetic":false,"types":[]},{"text":"impl Debug for SoCVendorBrand","synthetic":false,"types":[]},{"text":"impl Debug for HypervisorInfo","synthetic":false,"types":[]},{"text":"impl Debug for Hypervisor","synthetic":false,"types":[]},{"text":"impl Debug for ExtendedFunctionInfo","synthetic":false,"types":[]},{"text":"impl Debug for L2Associativity","synthetic":false,"types":[]},{"text":"impl Debug for MemoryEncryptionInfo","synthetic":false,"types":[]}];
implementors["trapframe"] = [{"text":"impl Debug for UserContext","synthetic":false,"types":[]},{"text":"impl Debug for GeneralRegs","synthetic":false,"types":[]}];
implementors["x86_64"] = [{"text":"impl Debug for VirtAddrNotValid","synthetic":false,"types":[]},{"text":"impl Debug for VirtAddr","synthetic":false,"types":[]},{"text":"impl Debug for PhysAddrNotValid","synthetic":false,"types":[]},{"text":"impl Debug for PhysAddr","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug + PortRead&gt; Debug for PortReadOnly&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug + PortWrite&gt; Debug for PortWriteOnly&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug + PortReadWrite&gt; Debug for Port&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Debug for RdRand","synthetic":false,"types":[]},{"text":"impl Debug for Cr0","synthetic":false,"types":[]},{"text":"impl Debug for Cr0Flags","synthetic":false,"types":[]},{"text":"impl Debug for Cr2","synthetic":false,"types":[]},{"text":"impl Debug for Cr3","synthetic":false,"types":[]},{"text":"impl Debug for Cr3Flags","synthetic":false,"types":[]},{"text":"impl Debug for Cr4","synthetic":false,"types":[]},{"text":"impl Debug for Cr4Flags","synthetic":false,"types":[]},{"text":"impl Debug for Msr","synthetic":false,"types":[]},{"text":"impl Debug for Efer","synthetic":false,"types":[]},{"text":"impl Debug for FsBase","synthetic":false,"types":[]},{"text":"impl Debug for GsBase","synthetic":false,"types":[]},{"text":"impl Debug for KernelGsBase","synthetic":false,"types":[]},{"text":"impl Debug for Star","synthetic":false,"types":[]},{"text":"impl Debug for LStar","synthetic":false,"types":[]},{"text":"impl Debug for SFMask","synthetic":false,"types":[]},{"text":"impl Debug for EferFlags","synthetic":false,"types":[]},{"text":"impl Debug for RFlags","synthetic":false,"types":[]},{"text":"impl Debug for SegmentSelector","synthetic":false,"types":[]},{"text":"impl Debug for GlobalDescriptorTable","synthetic":false,"types":[]},{"text":"impl Debug for Descriptor","synthetic":false,"types":[]},{"text":"impl Debug for DescriptorFlags","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Debug&gt; Debug for Entry&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl Debug for EntryOptions","synthetic":false,"types":[]},{"text":"impl Debug for InterruptStackFrame","synthetic":false,"types":[]},{"text":"impl Debug for InterruptStackFrameValue","synthetic":false,"types":[]},{"text":"impl Debug for PageFaultErrorCode","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;PageSize&gt; Debug for PhysFrame&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;PageSize&gt; Debug for PhysFrameRange&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;PageSize&gt; Debug for PhysFrameRangeInclusive&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug + PageSize&gt; Debug for UnusedPhysFrame&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, P:&nbsp;Debug + PhysToVirt&gt; Debug for MappedPageTable&lt;'a, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for OffsetPageTable&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for RecursivePageTable&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Debug for TranslateResult","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug + PageSize&gt; Debug for MapperFlush&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Debug for MapperFlushAll","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Debug + PageSize&gt; Debug for MapToError&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Debug for UnmapError","synthetic":false,"types":[]},{"text":"impl Debug for FlagUpdateError","synthetic":false,"types":[]},{"text":"impl Debug for TranslateError","synthetic":false,"types":[]},{"text":"impl Debug for Size4KiB","synthetic":false,"types":[]},{"text":"impl Debug for Size2MiB","synthetic":false,"types":[]},{"text":"impl Debug for Size1GiB","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;PageSize&gt; Debug for Page&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;PageSize&gt; Debug for PageRange&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;PageSize&gt; Debug for PageRangeInclusive&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Debug for FrameError","synthetic":false,"types":[]},{"text":"impl Debug for PageTableEntry","synthetic":false,"types":[]},{"text":"impl Debug for PageTableFlags","synthetic":false,"types":[]},{"text":"impl Debug for PageTable","synthetic":false,"types":[]},{"text":"impl Debug for PageTableIndex","synthetic":false,"types":[]},{"text":"impl Debug for PageOffset","synthetic":false,"types":[]},{"text":"impl Debug for TaskStateSegment","synthetic":false,"types":[]},{"text":"impl Debug for DescriptorTablePointer","synthetic":false,"types":[]},{"text":"impl Debug for PrivilegeLevel","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()