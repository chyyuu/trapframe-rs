var searchIndex = JSON.parse('{\
"trapframe":{"doc":"","i":[[0,"arch","trapframe","",null,null],[5,"syscall_fn_entry","trapframe::arch","The syscall entry of function call.",null,null],[3,"UserContext","","Saved registers on a trap.",null,null],[12,"trap_num","","Trap num: Source and Kind",0,null],[12,"__reserved","","Reserved for internal use",0,null],[12,"elr","","Exception Link Register, elr_el1",0,null],[12,"spsr","","Saved Process Status Register, spsr_el1",0,null],[12,"sp","","Stack Pointer, sp_el0",0,null],[12,"tpidr","","Software Thread ID Register, tpidr_el0",0,null],[12,"general","","General registers Must be last in this struct",0,null],[3,"GeneralRegs","","General registers",null,null],[12,"x1","","",1,null],[12,"x2","","",1,null],[12,"x3","","",1,null],[12,"x4","","",1,null],[12,"x5","","",1,null],[12,"x6","","",1,null],[12,"x7","","",1,null],[12,"x8","","",1,null],[12,"x9","","",1,null],[12,"x10","","",1,null],[12,"x11","","",1,null],[12,"x12","","",1,null],[12,"x13","","",1,null],[12,"x14","","",1,null],[12,"x15","","",1,null],[12,"x16","","",1,null],[12,"x17","","",1,null],[12,"x18","","",1,null],[12,"x19","","",1,null],[12,"x20","","",1,null],[12,"x21","","",1,null],[12,"x22","","",1,null],[12,"x23","","",1,null],[12,"x24","","",1,null],[12,"x25","","",1,null],[12,"x26","","",1,null],[12,"x27","","",1,null],[12,"x28","","",1,null],[12,"x29","","",1,null],[12,"__reserved","","",1,null],[12,"x30","","",1,null],[12,"x0","","",1,null],[11,"get_syscall_num","","Get number of syscall",0,[[],["usize",15]]],[11,"get_syscall_ret","","Get return value of syscall",0,[[],["usize",15]]],[11,"set_syscall_ret","","Set return value of syscall",0,[[["usize",15]]]],[11,"get_syscall_args","","Get syscall args",0,[[]]],[11,"set_ip","","Set instruction pointer",0,[[["usize",15]]]],[11,"set_sp","","Set stack pointer",0,[[["usize",15]]]],[11,"get_sp","","Get stack pointer",0,[[],["usize",15]]],[11,"set_tls","","Set tls pointer",0,[[["usize",15]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["usercontext",3]],["bool",15]]],[11,"ne","","",0,[[["usercontext",3]],["bool",15]]],[11,"eq","","",1,[[["generalregs",3]],["bool",15]]],[11,"ne","","",1,[[["generalregs",3]],["bool",15]]],[11,"clone","","",0,[[],["usercontext",3]]],[11,"clone","","",1,[[],["generalregs",3]]],[11,"default","","",0,[[],["usercontext",3]]],[11,"default","","",1,[[],["generalregs",3]]],[11,"run_fncall","","Go to user context by function return, within the same â€¦",0,[[]]]],"p":[[3,"UserContext"],[3,"GeneralRegs"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);