(function() {var implementors = {};
implementors["raw_cpuid"] = [{"text":"impl Freeze for CpuId","synthetic":true,"types":[]},{"text":"impl Freeze for CpuIdResult","synthetic":true,"types":[]},{"text":"impl Freeze for VendorInfo","synthetic":true,"types":[]},{"text":"impl Freeze for CacheInfoIter","synthetic":true,"types":[]},{"text":"impl Freeze for CacheInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ProcessorSerial","synthetic":true,"types":[]},{"text":"impl Freeze for FeatureInfo","synthetic":true,"types":[]},{"text":"impl Freeze for CacheParametersIter","synthetic":true,"types":[]},{"text":"impl Freeze for CacheParameter","synthetic":true,"types":[]},{"text":"impl Freeze for MonitorMwaitInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ThermalPowerInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ExtendedFeatures","synthetic":true,"types":[]},{"text":"impl Freeze for DirectCacheAccessInfo","synthetic":true,"types":[]},{"text":"impl Freeze for PerformanceMonitoringInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ExtendedTopologyIter","synthetic":true,"types":[]},{"text":"impl Freeze for ExtendedTopologyLevel","synthetic":true,"types":[]},{"text":"impl Freeze for ExtendedStateInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ExtendedStateIter","synthetic":true,"types":[]},{"text":"impl Freeze for ExtendedState","synthetic":true,"types":[]},{"text":"impl Freeze for RdtMonitoringInfo","synthetic":true,"types":[]},{"text":"impl Freeze for L3MonitoringInfo","synthetic":true,"types":[]},{"text":"impl Freeze for RdtAllocationInfo","synthetic":true,"types":[]},{"text":"impl Freeze for L3CatInfo","synthetic":true,"types":[]},{"text":"impl Freeze for L2CatInfo","synthetic":true,"types":[]},{"text":"impl Freeze for MemBwAllocationInfo","synthetic":true,"types":[]},{"text":"impl Freeze for SgxInfo","synthetic":true,"types":[]},{"text":"impl Freeze for SgxSectionIter","synthetic":true,"types":[]},{"text":"impl Freeze for EpcSection","synthetic":true,"types":[]},{"text":"impl Freeze for ProcessorTraceInfo","synthetic":true,"types":[]},{"text":"impl Freeze for TscInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ProcessorFrequencyInfo","synthetic":true,"types":[]},{"text":"impl Freeze for DatIter","synthetic":true,"types":[]},{"text":"impl Freeze for DatInfo","synthetic":true,"types":[]},{"text":"impl Freeze for SoCVendorInfo","synthetic":true,"types":[]},{"text":"impl Freeze for SoCVendorAttributesIter","synthetic":true,"types":[]},{"text":"impl Freeze for SoCVendorBrand","synthetic":true,"types":[]},{"text":"impl Freeze for HypervisorInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ExtendedFunctionInfo","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryEncryptionInfo","synthetic":true,"types":[]},{"text":"impl Freeze for CacheInfoType","synthetic":true,"types":[]},{"text":"impl Freeze for CacheType","synthetic":true,"types":[]},{"text":"impl Freeze for TopologyType","synthetic":true,"types":[]},{"text":"impl Freeze for SgxSectionInfo","synthetic":true,"types":[]},{"text":"impl Freeze for DatType","synthetic":true,"types":[]},{"text":"impl Freeze for Hypervisor","synthetic":true,"types":[]},{"text":"impl Freeze for L2Associativity","synthetic":true,"types":[]}];
implementors["trapframe"] = [{"text":"impl Freeze for UserContext","synthetic":true,"types":[]},{"text":"impl Freeze for GeneralRegs","synthetic":true,"types":[]}];
implementors["x86_64"] = [{"text":"impl Freeze for PrivilegeLevel","synthetic":true,"types":[]},{"text":"impl Freeze for VirtAddr","synthetic":true,"types":[]},{"text":"impl Freeze for PhysAddr","synthetic":true,"types":[]},{"text":"impl Freeze for VirtAddrNotValid","synthetic":true,"types":[]},{"text":"impl Freeze for PhysAddrNotValid","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PortReadOnly&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PortWriteOnly&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Port&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RdRand","synthetic":true,"types":[]},{"text":"impl Freeze for Cr0","synthetic":true,"types":[]},{"text":"impl Freeze for Cr0Flags","synthetic":true,"types":[]},{"text":"impl Freeze for Cr2","synthetic":true,"types":[]},{"text":"impl Freeze for Cr3","synthetic":true,"types":[]},{"text":"impl Freeze for Cr3Flags","synthetic":true,"types":[]},{"text":"impl Freeze for Cr4","synthetic":true,"types":[]},{"text":"impl Freeze for Cr4Flags","synthetic":true,"types":[]},{"text":"impl Freeze for Msr","synthetic":true,"types":[]},{"text":"impl Freeze for Efer","synthetic":true,"types":[]},{"text":"impl Freeze for FsBase","synthetic":true,"types":[]},{"text":"impl Freeze for GsBase","synthetic":true,"types":[]},{"text":"impl Freeze for KernelGsBase","synthetic":true,"types":[]},{"text":"impl Freeze for Star","synthetic":true,"types":[]},{"text":"impl Freeze for LStar","synthetic":true,"types":[]},{"text":"impl Freeze for SFMask","synthetic":true,"types":[]},{"text":"impl Freeze for EferFlags","synthetic":true,"types":[]},{"text":"impl Freeze for RFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DescriptorTablePointer","synthetic":true,"types":[]},{"text":"impl Freeze for SegmentSelector","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalDescriptorTable","synthetic":true,"types":[]},{"text":"impl Freeze for DescriptorFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Descriptor","synthetic":true,"types":[]},{"text":"impl Freeze for InterruptDescriptorTable","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for Entry&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EntryOptions","synthetic":true,"types":[]},{"text":"impl Freeze for InterruptStackFrame","synthetic":true,"types":[]},{"text":"impl Freeze for InterruptStackFrameValue","synthetic":true,"types":[]},{"text":"impl Freeze for PageFaultErrorCode","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for UnusedPhysFrame&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for PhysFrame&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for PhysFrameRange&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for PhysFrameRangeInclusive&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Freeze for MappedPageTable&lt;'a, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OffsetPageTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecursivePageTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for MapperFlush&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MapperFlushAll","synthetic":true,"types":[]},{"text":"impl Freeze for TranslateResult","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for MapToError&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for UnmapError","synthetic":true,"types":[]},{"text":"impl Freeze for FlagUpdateError","synthetic":true,"types":[]},{"text":"impl Freeze for TranslateError","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Page&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for PageRange&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for PageRangeInclusive&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Size4KiB","synthetic":true,"types":[]},{"text":"impl Freeze for Size2MiB","synthetic":true,"types":[]},{"text":"impl Freeze for Size1GiB","synthetic":true,"types":[]},{"text":"impl Freeze for PageTableEntry","synthetic":true,"types":[]},{"text":"impl Freeze for PageTableFlags","synthetic":true,"types":[]},{"text":"impl Freeze for PageTable","synthetic":true,"types":[]},{"text":"impl Freeze for PageTableIndex","synthetic":true,"types":[]},{"text":"impl Freeze for PageOffset","synthetic":true,"types":[]},{"text":"impl Freeze for FrameError","synthetic":true,"types":[]},{"text":"impl Freeze for TaskStateSegment","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()