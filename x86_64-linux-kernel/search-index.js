var searchIndex = JSON.parse('{\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for…","i":[[8,"BitField","bit_field","A generic trait which provides methods for extracting and…",null,null],[10,"bit_length","","Returns the length, eg number of bits, in this bit field.",0,[[]]],[10,"get_bit","","Obtains the bit at the index `bit`; note that index 0 is…",0,[[]]],[10,"get_bits","","Obtains the range of bits specified by `range`; note that…",0,[[["range",3]]]],[10,"set_bit","","Sets the bit at the index `bit` to the value `value`…",0,[[]]],[10,"set_bits","","Sets the range of bits defined by the range `range` to the…",0,[[["range",3]]]],[8,"BitArray","","",null,null],[10,"bit_length","","Returns the length, eg number of bits, in this bit array.",1,[[]]],[10,"get_bit","","Obtains the bit at the index `bit`; note that index 0 is…",1,[[]]],[10,"get_bits","","Obtains the range of bits specified by `range`; note that…",1,[[["range",3]]]],[10,"set_bit","","Sets the bit at the index `bit` to the value `value`…",1,[[]]],[10,"set_bits","","Sets the range of bits defined by the range `range` to the…",1,[[["range",3]]]]],"p":[[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"raw_cpuid":{"doc":"","i":[[3,"CpuId","raw_cpuid","Main type used to query for information about the CPU…",null,null],[3,"CpuIdResult","","Low-level data-structure to store result of cpuid…",null,null],[12,"eax","","Return value EAX register",0,null],[12,"ebx","","Return value EBX register",0,null],[12,"ecx","","Return value ECX register",0,null],[12,"edx","","Return value EDX register",0,null],[3,"VendorInfo","","",null,null],[3,"CacheInfoIter","","Used to iterate over cache information contained in cpuid…",null,null],[3,"CacheInfo","","Describes any kind of cache (TLB, Data and Instruction…",null,null],[12,"num","","Number as retrieved from cpuid",1,null],[12,"typ","","Cache type",1,null],[3,"ProcessorSerial","","",null,null],[3,"FeatureInfo","","",null,null],[3,"CacheParametersIter","","",null,null],[3,"CacheParameter","","",null,null],[3,"MonitorMwaitInfo","","",null,null],[3,"ThermalPowerInfo","","",null,null],[3,"ExtendedFeatures","","",null,null],[3,"DirectCacheAccessInfo","","",null,null],[3,"PerformanceMonitoringInfo","","",null,null],[3,"ExtendedTopologyIter","","Iterates over the system topology in order to retrieve…",null,null],[3,"ExtendedTopologyLevel","","Gives detailed information about the current level in the…",null,null],[3,"ExtendedStateInfo","","",null,null],[3,"ExtendedStateIter","","",null,null],[3,"ExtendedState","","",null,null],[12,"subleaf","","",2,null],[3,"RdtMonitoringInfo","","",null,null],[3,"L3MonitoringInfo","","",null,null],[3,"RdtAllocationInfo","","",null,null],[3,"L3CatInfo","","L3 Cache Allocation Technology Enumeration Sub-leaf (EAX =…",null,null],[3,"L2CatInfo","","L2 Cache Allocation Technology Enumeration Sub-leaf (EAX =…",null,null],[3,"MemBwAllocationInfo","","Memory Bandwidth Allocation Enumeration Sub-leaf (EAX =…",null,null],[3,"SgxInfo","","Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX =…",null,null],[3,"SgxSectionIter","","Iterator over the SGX sub-leafs (ECX >= 2).",null,null],[3,"EpcSection","","EBX:EAX and EDX:ECX provide information on the Enclave…",null,null],[3,"ProcessorTraceInfo","","",null,null],[3,"TscInfo","","Time Stamp Counter and Nominal Core Crystal Clock…",null,null],[3,"ProcessorFrequencyInfo","","Processor Frequency Information",null,null],[3,"DatIter","","Deterministic Address Translation Structure Iterator",null,null],[3,"DatInfo","","Deterministic Address Translation Structure",null,null],[3,"SoCVendorInfo","","",null,null],[3,"SoCVendorAttributesIter","","",null,null],[3,"SoCVendorBrand","","",null,null],[3,"HypervisorInfo","","Information about Hypervisor…",null,null],[3,"ExtendedFunctionInfo","","",null,null],[3,"MemoryEncryptionInfo","","",null,null],[4,"CacheInfoType","","What type of cache are we dealing with?",null,null],[13,"General","","",3,null],[13,"Cache","","",3,null],[13,"TLB","","",3,null],[13,"STLB","","",3,null],[13,"DTLB","","",3,null],[13,"Prefetch","","",3,null],[4,"CacheType","","",null,null],[13,"Null","","Null - No more caches",4,null],[13,"Data","","Data cache",4,null],[13,"Instruction","","Instruction cache",4,null],[13,"Unified","","Data and Instruction cache",4,null],[13,"Reserved","","4-31 = Reserved",4,null],[4,"TopologyType","","What type of core we have at this level in the topology…",null,null],[13,"Invalid","","",5,null],[13,"SMT","","Hyper-thread (Simultaneous multithreading)",5,null],[13,"Core","","",5,null],[4,"SgxSectionInfo","","Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, ECX…",null,null],[13,"Epc","","",6,null],[4,"DatType","","Deterministic Address Translation cache type (EDX bits 04…",null,null],[13,"Null","","Null (indicates this sub-leaf is not valid).",7,null],[13,"DataTLB","","",7,null],[13,"InstructionTLB","","",7,null],[13,"UnifiedTLB","","Some unified TLBs will allow a single TLB entry to satisfy…",7,null],[13,"Unknown","","",7,null],[4,"Hypervisor","","Identifies the different Hypervisor products.",null,null],[13,"Xen","","",8,null],[13,"VMware","","",8,null],[13,"HyperV","","",8,null],[13,"KVM","","",8,null],[13,"Unknown","","",8,null],[4,"L2Associativity","","",null,null],[13,"Disabled","","",9,null],[13,"DirectMapped","","",9,null],[13,"TwoWay","","",9,null],[13,"FourWay","","",9,null],[13,"EightWay","","",9,null],[13,"SixteenWay","","",9,null],[13,"FullyAssiciative","","",9,null],[13,"Unknown","","",9,null],[0,"native_cpuid","","Uses Rust\'s `cpuid` function from the `arch` module.",null,null],[5,"cpuid_count","raw_cpuid::native_cpuid","",null,[[],["cpuidresult",3]]],[17,"CACHE_INFO_TABLE","raw_cpuid","This table is taken from Intel manual (Section CPUID…",null,null],[11,"new","","Return new CPUID struct.",10,[[],["cpuid",3]]],[11,"get_vendor_info","","Return information about vendor. This is typically a ASCII…",10,[[],[["vendorinfo",3],["option",4]]]],[11,"get_feature_info","","Query a set of features that are available on this CPU.",10,[[],[["option",4],["featureinfo",3]]]],[11,"get_cache_info","","Query basic information about caches. This will just…",10,[[],[["cacheinfoiter",3],["option",4]]]],[11,"get_processor_serial","","Retrieve serial number of processor.",10,[[],[["processorserial",3],["option",4]]]],[11,"get_cache_parameters","","Retrieve more elaborate information about caches (as…",10,[[],[["option",4],["cacheparametersiter",3]]]],[11,"get_monitor_mwait_info","","Information about how monitor/mwait works on this CPU.",10,[[],[["option",4],["monitormwaitinfo",3]]]],[11,"get_thermal_power_info","","Query information about thermal and power management…",10,[[],[["option",4],["thermalpowerinfo",3]]]],[11,"get_extended_feature_info","","Find out about more features supported by this CPU.",10,[[],[["extendedfeatures",3],["option",4]]]],[11,"get_direct_cache_access_info","","Direct cache access info.",10,[[],[["option",4],["directcacheaccessinfo",3]]]],[11,"get_performance_monitoring_info","","Info about performance monitoring (how many counters etc.).",10,[[],[["option",4],["performancemonitoringinfo",3]]]],[11,"get_extended_topology_info","","Information about topology (how many cores and what kind…",10,[[],[["extendedtopologyiter",3],["option",4]]]],[11,"get_extended_state_info","","Information for saving/restoring extended register state.",10,[[],[["option",4],["extendedstateinfo",3]]]],[11,"get_rdt_monitoring_info","","Quality of service informations.",10,[[],[["option",4],["rdtmonitoringinfo",3]]]],[11,"get_rdt_allocation_info","","Quality of service enforcement information.",10,[[],[["rdtallocationinfo",3],["option",4]]]],[11,"get_sgx_info","","",10,[[],[["sgxinfo",3],["option",4]]]],[11,"get_processor_trace_info","","Intel Processor Trace Enumeration Information.",10,[[],[["processortraceinfo",3],["option",4]]]],[11,"get_tsc_info","","Time Stamp Counter/Core Crystal Clock Information.",10,[[],[["option",4],["tscinfo",3]]]],[11,"get_processor_frequency_info","","Processor Frequency Information.",10,[[],[["processorfrequencyinfo",3],["option",4]]]],[11,"deterministic_address_translation_info","","",10,[[],[["option",4],["datiter",3]]]],[11,"get_soc_vendor_info","","",10,[[],[["socvendorinfo",3],["option",4]]]],[11,"get_hypervisor_info","","",10,[[],[["hypervisorinfo",3],["option",4]]]],[11,"get_extended_function_info","","Extended functionality of CPU described here (including…",10,[[],[["option",4],["extendedfunctioninfo",3]]]],[11,"get_memory_encryption_info","","",10,[[],[["memoryencryptioninfo",3],["option",4]]]],[11,"as_string","","Return vendor identification as human readable string.",11,[[]]],[11,"desc","","Description of the cache (from Intel Manual)",1,[[]]],[11,"serial_lower","","Bits 00-31 of 96 bit processor serial number. (Available…",12,[[]]],[11,"serial_middle","","Bits 32-63 of 96 bit processor serial number. (Available…",12,[[]]],[11,"serial","","",12,[[]]],[11,"extended_family_id","","Version Information: Extended Family",13,[[]]],[11,"extended_model_id","","Version Information: Extended Model",13,[[]]],[11,"family_id","","Version Information: Family",13,[[]]],[11,"model_id","","Version Information: Model",13,[[]]],[11,"stepping_id","","Version Information: Stepping ID",13,[[]]],[11,"brand_index","","Brand Index",13,[[]]],[11,"cflush_cache_line_size","","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)",13,[[]]],[11,"initial_local_apic_id","","Initial APIC ID",13,[[]]],[11,"max_logical_processor_ids","","Maximum number of addressable IDs for logical processors…",13,[[]]],[11,"has_sse3","","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates…",13,[[]]],[11,"has_pclmulqdq","","PCLMULQDQ. A value of 1 indicates the processor supports…",13,[[]]],[11,"has_ds_area","","64-bit DS Area. A value of 1 indicates the processor…",13,[[]]],[11,"has_monitor_mwait","","MONITOR/MWAIT. A value of 1 indicates the processor…",13,[[]]],[11,"has_cpl","","CPL Qualified Debug Store. A value of 1 indicates the…",13,[[]]],[11,"has_vmx","","Virtual Machine Extensions. A value of 1 indicates that…",13,[[]]],[11,"has_smx","","Safer Mode Extensions. A value of 1 indicates that the…",13,[[]]],[11,"has_eist","","Enhanced Intel SpeedStep® technology. A value of 1…",13,[[]]],[11,"has_tm2","","Thermal Monitor 2. A value of 1 indicates whether the…",13,[[]]],[11,"has_ssse3","","A value of 1 indicates the presence of the Supplemental…",13,[[]]],[11,"has_cnxtid","","L1 Context ID. A value of 1 indicates the L1 data cache…",13,[[]]],[11,"has_fma","","A value of 1 indicates the processor supports FMA…",13,[[]]],[11,"has_cmpxchg16b","","CMPXCHG16B Available. A value of 1 indicates that the…",13,[[]]],[11,"has_pdcm","","Perfmon and Debug Capability: A value of 1 indicates the…",13,[[]]],[11,"has_pcid","","Process-context identifiers. A value of 1 indicates that…",13,[[]]],[11,"has_dca","","A value of 1 indicates the processor supports the ability…",13,[[]]],[11,"has_sse41","","A value of 1 indicates that the processor supports SSE4.1.",13,[[]]],[11,"has_sse42","","A value of 1 indicates that the processor supports SSE4.2.",13,[[]]],[11,"has_x2apic","","A value of 1 indicates that the processor supports x2APIC…",13,[[]]],[11,"has_movbe","","A value of 1 indicates that the processor supports MOVBE…",13,[[]]],[11,"has_popcnt","","A value of 1 indicates that the processor supports the…",13,[[]]],[11,"has_tsc_deadline","","A value of 1 indicates that the processors local APIC…",13,[[]]],[11,"has_aesni","","A value of 1 indicates that the processor supports the…",13,[[]]],[11,"has_xsave","","A value of 1 indicates that the processor supports the…",13,[[]]],[11,"has_oxsave","","A value of 1 indicates that the OS has enabled…",13,[[]]],[11,"has_avx","","A value of 1 indicates the processor supports the AVX…",13,[[]]],[11,"has_f16c","","A value of 1 indicates that processor supports 16-bit…",13,[[]]],[11,"has_rdrand","","A value of 1 indicates that processor supports RDRAND…",13,[[]]],[11,"has_hypervisor","","A value of 1 indicates the indicates the presence of a…",13,[[]]],[11,"has_fpu","","Floating Point Unit On-Chip. The processor contains an x87…",13,[[]]],[11,"has_vme","","Virtual 8086 Mode Enhancements. Virtual 8086 mode…",13,[[]]],[11,"has_de","","Debugging Extensions. Support for I/O breakpoints,…",13,[[]]],[11,"has_pse","","Page Size Extension. Large pages of size 4 MByte are…",13,[[]]],[11,"has_tsc","","Time Stamp Counter. The RDTSC instruction is supported,…",13,[[]]],[11,"has_msr","","Model Specific Registers RDMSR and WRMSR Instructions. The…",13,[[]]],[11,"has_pae","","Physical Address Extension. Physical addresses greater…",13,[[]]],[11,"has_mce","","Machine Check Exception. Exception 18 is defined for…",13,[[]]],[11,"has_cmpxchg8b","","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes…",13,[[]]],[11,"has_apic","","APIC On-Chip. The processor contains an Advanced…",13,[[]]],[11,"has_sysenter_sysexit","","SYSENTER and SYSEXIT Instructions. The SYSENTER and…",13,[[]]],[11,"has_mtrr","","Memory Type Range Registers. MTRRs are supported. The…",13,[[]]],[11,"has_pge","","Page Global Bit. The global bit is supported in…",13,[[]]],[11,"has_mca","","Machine Check Architecture. A value of 1 indicates the…",13,[[]]],[11,"has_cmov","","Conditional Move Instructions. The conditional move…",13,[[]]],[11,"has_pat","","Page Attribute Table. Page Attribute Table is supported.…",13,[[]]],[11,"has_pse36","","36-Bit Page Size Extension. 4-MByte pages addressing…",13,[[]]],[11,"has_psn","","Processor Serial Number. The processor supports the 96-bit…",13,[[]]],[11,"has_clflush","","CLFLUSH Instruction. CLFLUSH Instruction is supported.",13,[[]]],[11,"has_ds","","Debug Store. The processor supports the ability to write…",13,[[]]],[11,"has_acpi","","Thermal Monitor and Software Controlled Clock Facilities.…",13,[[]]],[11,"has_mmx","","Intel MMX Technology. The processor supports the Intel MMX…",13,[[]]],[11,"has_fxsave_fxstor","","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR…",13,[[]]],[11,"has_sse","","SSE. The processor supports the SSE extensions.",13,[[]]],[11,"has_sse2","","SSE2. The processor supports the SSE2 extensions.",13,[[]]],[11,"has_ss","","Self Snoop. The processor supports the management of…",13,[[]]],[11,"has_htt","","Max APIC IDs reserved field is Valid. A value of 0 for HTT…",13,[[]]],[11,"has_tm","","Thermal Monitor. The processor implements the thermal…",13,[[]]],[11,"has_pbe","","Pending Break Enable. The processor supports the use of…",13,[[]]],[11,"cache_type","","Cache Type",14,[[],["cachetype",4]]],[11,"level","","Cache Level (starts at 1)",14,[[]]],[11,"is_self_initializing","","Self Initializing cache level (does not need SW…",14,[[]]],[11,"is_fully_associative","","Fully Associative cache",14,[[]]],[11,"max_cores_for_cache","","Maximum number of addressable IDs for logical processors…",14,[[]]],[11,"max_cores_for_package","","Maximum number of addressable IDs for processor cores in…",14,[[]]],[11,"coherency_line_size","","System Coherency Line Size (Bits 11-00)",14,[[]]],[11,"physical_line_partitions","","Physical Line partitions (Bits 21-12)",14,[[]]],[11,"associativity","","Ways of associativity (Bits 31-22)",14,[[]]],[11,"sets","","Number of Sets (Bits 31-00)",14,[[]]],[11,"is_write_back_invalidate","","Write-Back Invalidate/Invalidate (Bit 0) False:…",14,[[]]],[11,"is_inclusive","","Cache Inclusiveness (Bit 1) False: Cache is not inclusive…",14,[[]]],[11,"has_complex_indexing","","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…",14,[[]]],[11,"smallest_monitor_line","","Smallest monitor-line size in bytes (default is…",15,[[]]],[11,"largest_monitor_line","","Largest monitor-line size in bytes (default is processor\'s…",15,[[]]],[11,"extensions_supported","","Enumeration of Monitor-Mwait extensions (beyond EAX and…",15,[[]]],[11,"interrupts_as_break_event","","Supports treating interrupts as break-event for MWAIT,…",15,[[]]],[11,"supported_c0_states","","Number of C0 sub C-states supported using MWAIT (Bits 03 -…",15,[[]]],[11,"supported_c1_states","","Number of C1 sub C-states supported using MWAIT (Bits 07 -…",15,[[]]],[11,"supported_c2_states","","Number of C2 sub C-states supported using MWAIT (Bits 11 -…",15,[[]]],[11,"supported_c3_states","","Number of C3 sub C-states supported using MWAIT (Bits 15 -…",15,[[]]],[11,"supported_c4_states","","Number of C4 sub C-states supported using MWAIT (Bits 19 -…",15,[[]]],[11,"supported_c5_states","","Number of C5 sub C-states supported using MWAIT (Bits 23 -…",15,[[]]],[11,"supported_c6_states","","Number of C6 sub C-states supported using MWAIT (Bits 27 -…",15,[[]]],[11,"supported_c7_states","","Number of C7 sub C-states supported using MWAIT (Bits 31 -…",15,[[]]],[11,"dts_irq_threshold","","Number of Interrupt Thresholds in Digital Thermal Sensor",16,[[]]],[11,"has_dts","","Digital temperature sensor is supported if set.",16,[[]]],[11,"has_turbo_boost","","Intel Turbo Boost Technology Available (see description of…",16,[[]]],[11,"has_arat","","ARAT. APIC-Timer-always-running feature is supported if set.",16,[[]]],[11,"has_pln","","PLN. Power limit notification controls are supported if set.",16,[[]]],[11,"has_ecmd","","ECMD. Clock modulation duty cycle extension is supported…",16,[[]]],[11,"has_ptm","","PTM. Package thermal management is supported if set.",16,[[]]],[11,"has_hwp","","HWP. HWP base registers (IA32_PM_ENABLE[bit 0],…",16,[[]]],[11,"has_hwp_notification","","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if…",16,[[]]],[11,"has_hwp_activity_window","","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is…",16,[[]]],[11,"has_hwp_energy_performance_preference","","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits…",16,[[]]],[11,"has_hwp_package_level_request","","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is…",16,[[]]],[11,"has_hdc","","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1,…",16,[[]]],[11,"has_turbo_boost3","","Intel® Turbo Boost Max Technology 3.0 available.",16,[[]]],[11,"has_hwp_capabilities","","HWP Capabilities. Highest Performance change is supported…",16,[[]]],[11,"has_hwp_peci_override","","HWP PECI override is supported if set.",16,[[]]],[11,"has_flexible_hwp","","Flexible HWP is supported if set.",16,[[]]],[11,"has_hwp_fast_access_mode","","Fast access mode for the IA32_HWP_REQUEST MSR is supported…",16,[[]]],[11,"has_ignore_idle_processor_hwp_request","","Ignoring Idle Logical Processor HWP request is supported…",16,[[]]],[11,"has_hw_coord_feedback","","Hardware Coordination Feedback Capability (Presence of…",16,[[]]],[11,"has_energy_bias_pref","","The processor supports performance-energy bias preference…",16,[[]]],[11,"has_fsgsbase","","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if 1.",17,[[]]],[11,"has_tsc_adjust_msr","","IA32_TSC_ADJUST MSR is supported if 1.",17,[[]]],[11,"has_bmi1","","BMI1",17,[[]]],[11,"has_hle","","HLE",17,[[]]],[11,"has_avx2","","AVX2",17,[[]]],[11,"has_fdp","","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87…",17,[[]]],[11,"has_smep","","SMEP. Supports Supervisor-Mode Execution Prevention if 1.",17,[[]]],[11,"has_bmi2","","BMI2",17,[[]]],[11,"has_rep_movsb_stosb","","Supports Enhanced REP MOVSB/STOSB if 1.",17,[[]]],[11,"has_invpcid","","INVPCID. If 1, supports INVPCID instruction for system…",17,[[]]],[11,"has_rtm","","RTM",17,[[]]],[11,"has_rdtm","","Supports Intel Resource Director Technology (RDT)…",17,[[]]],[11,"has_fpu_cs_ds_deprecated","","Deprecates FPU CS and FPU DS values if 1.",17,[[]]],[11,"has_mpx","","MPX. Supports Intel Memory Protection Extensions if 1.",17,[[]]],[11,"has_rdta","","Supports Intel Resource Director Technology (RDT)…",17,[[]]],[11,"has_rdseed","","Supports RDSEED.",17,[[]]],[11,"has_rdseet","","Supports RDSEED (deprecated alias).",17,[[]]],[11,"has_adx","","Supports ADX.",17,[[]]],[11,"has_smap","","SMAP. Supports Supervisor-Mode Access Prevention (and the…",17,[[]]],[11,"has_clflushopt","","Supports CLFLUSHOPT.",17,[[]]],[11,"has_processor_trace","","Supports Intel Processor Trace.",17,[[]]],[11,"has_sha","","Supports SHA Instructions.",17,[[]]],[11,"has_sgx","","Supports Intel® Software Guard Extensions (Intel® SGX…",17,[[]]],[11,"has_avx512f","","Supports AVX512F.",17,[[]]],[11,"has_avx512dq","","Supports AVX512DQ.",17,[[]]],[11,"has_avx512_ifma","","AVX512_IFMA",17,[[]]],[11,"has_avx512pf","","AVX512PF",17,[[]]],[11,"has_avx512er","","AVX512ER",17,[[]]],[11,"has_avx512cd","","AVX512CD",17,[[]]],[11,"has_avx512bw","","AVX512BW",17,[[]]],[11,"has_avx512vl","","AVX512VL",17,[[]]],[11,"has_clwb","","CLWB",17,[[]]],[11,"has_prefetchwt1","","Has PREFETCHWT1 (Intel® Xeon Phi™ only).",17,[[]]],[11,"has_umip","","Supports user-mode instruction prevention if 1.",17,[[]]],[11,"has_pku","","Supports protection keys for user-mode pages.",17,[[]]],[11,"has_ospke","","OS has set CR4.PKE to enable protection keys (and the…",17,[[]]],[11,"has_rdpid","","RDPID and IA32_TSC_AUX are available.",17,[[]]],[11,"has_sgx_lc","","Supports SGX Launch Configuration.",17,[[]]],[11,"mawau_value","","The value of MAWAU used by the BNDLDX and BNDSTX…",17,[[]]],[11,"get_dca_cap_value","","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address…",18,[[]]],[11,"version_id","","Version ID of architectural performance monitoring. (Bits…",19,[[]]],[11,"number_of_counters","","Number of general-purpose performance monitoring counter…",19,[[]]],[11,"counter_bit_width","","Bit width of general-purpose, performance monitoring…",19,[[]]],[11,"ebx_length","","Length of EBX bit vector to enumerate architectural…",19,[[]]],[11,"fixed_function_counters","","Number of fixed-function performance counters (if Version…",19,[[]]],[11,"fixed_function_counters_bit_width","","Bit width of fixed-function performance counters (if…",19,[[]]],[11,"has_any_thread_deprecation","","AnyThread deprecation",19,[[]]],[11,"is_core_cyc_ev_unavailable","","Core cycle event not available if 1.",19,[[]]],[11,"is_inst_ret_ev_unavailable","","Instruction retired event not available if 1.",19,[[]]],[11,"is_ref_cycle_ev_unavailable","","Reference cycles event not available if 1.",19,[[]]],[11,"is_cache_ref_ev_unavailable","","Last-level cache reference event not available if 1.",19,[[]]],[11,"is_ll_cache_miss_ev_unavailable","","Last-level cache misses event not available if 1.",19,[[]]],[11,"is_branch_inst_ret_ev_unavailable","","Branch instruction retired event not available if 1.",19,[[]]],[11,"is_branch_midpred_ev_unavailable","","Branch mispredict retired event not available if 1.",19,[[]]],[11,"processors","","Number of logical processors at this level type. The…",20,[[]]],[11,"level_number","","Level number.",20,[[]]],[11,"level_type","","",20,[[],["topologytype",4]]],[11,"x2apic_id","","x2APIC ID the current logical processor. (Bits 31-00)",20,[[]]],[11,"shift_right_for_next_apic_id","","Number of bits to shift right on x2APIC ID to get a unique…",20,[[]]],[11,"xcr0_supports_legacy_x87","","Support for legacy x87 in XCR0.",21,[[]]],[11,"xcr0_supports_sse_128","","Support for SSE 128-bit in XCR0.",21,[[]]],[11,"xcr0_supports_avx_256","","Support for AVX 256-bit in XCR0.",21,[[]]],[11,"xcr0_supports_mpx_bndregs","","Support for MPX BNDREGS in XCR0.",21,[[]]],[11,"xcr0_supports_mpx_bndcsr","","Support for MPX BNDCSR in XCR0.",21,[[]]],[11,"xcr0_supports_avx512_opmask","","Support for AVX512 OPMASK in XCR0.",21,[[]]],[11,"xcr0_supports_avx512_zmm_hi256","","Support for AVX512 ZMM Hi256 XCR0.",21,[[]]],[11,"xcr0_supports_avx512_zmm_hi16","","Support for AVX512 ZMM Hi16 in XCR0.",21,[[]]],[11,"xcr0_supports_pkru","","Support for PKRU in XCR0.",21,[[]]],[11,"ia32_xss_supports_pt","","Support for PT in IA32_XSS.",21,[[]]],[11,"ia32_xss_supports_hdc","","Support for HDC in IA32_XSS.",21,[[]]],[11,"xsave_area_size_enabled_features","","Maximum size (bytes, from the beginning of the…",21,[[]]],[11,"xsave_area_size_supported_features","","Maximum size (bytes, from the beginning of the…",21,[[]]],[11,"has_xsaveopt","","CPU has xsaveopt feature.",21,[[]]],[11,"has_xsavec","","Supports XSAVEC and the compacted form of XRSTOR if set.",21,[[]]],[11,"has_xgetbv","","Supports XGETBV with ECX = 1 if set.",21,[[]]],[11,"has_xsaves_xrstors","","Supports XSAVES/XRSTORS and IA32_XSS if set.",21,[[]]],[11,"xsave_size","","The size in bytes of the XSAVE area containing all states…",21,[[]]],[11,"iter","","Iterator over extended state enumeration levels >= 2.",21,[[],["extendedstateiter",3]]],[11,"size","","The size in bytes (from the offset specified in EBX) of…",2,[[]]],[11,"offset","","The offset in bytes of this extended state components save…",2,[[]]],[11,"is_in_ia32_xss","","True if the bit n (corresponding to the sub-leaf index) is…",2,[[]]],[11,"is_in_xcr0","","True if bit n is supported in XCR0.",2,[[]]],[11,"is_compacted_format","","Returns true when the compacted format of an XSAVE area is…",2,[[]]],[11,"rmid_range","","Maximum range (zero-based) of RMID within this physical…",22,[[]]],[11,"has_l3_monitoring","","Supports L3 Cache Intel RDT Monitoring.",22,[[]]],[11,"l3_monitoring","","L3 Cache Monitoring.",22,[[],[["option",4],["l3monitoringinfo",3]]]],[11,"conversion_factor","","Conversion factor from reported IA32_QM_CTR value to…",23,[[]]],[11,"maximum_rmid_range","","Maximum range (zero-based) of RMID of L3.",23,[[]]],[11,"has_occupancy_monitoring","","Supports occupancy monitoring.",23,[[]]],[11,"has_total_bandwidth_monitoring","","Supports total bandwidth monitoring.",23,[[]]],[11,"has_local_bandwidth_monitoring","","Supports local bandwidth monitoring.",23,[[]]],[11,"has_l3_cat","","Supports L3 Cache Allocation.",24,[[]]],[11,"has_l2_cat","","Supports L2 Cache Allocation.",24,[[]]],[11,"has_memory_bandwidth_allocation","","Supports Memory Bandwidth Allocation.",24,[[]]],[11,"l3_cat","","L3 Cache Allocation Information.",24,[[],[["l3catinfo",3],["option",4]]]],[11,"l2_cat","","L2 Cache Allocation Information.",24,[[],[["option",4],["l2catinfo",3]]]],[11,"memory_bandwidth_allocation","","Memory Bandwidth Allocation Information.",24,[[],[["option",4],["membwallocationinfo",3]]]],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",25,[[]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation…",25,[[]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",25,[[]]],[11,"has_code_data_prioritization","","Is Code and Data Prioritization Technology supported?",25,[[]]],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",26,[[]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation…",26,[[]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",26,[[]]],[11,"max_hba_throttling","","Reports the maximum MBA throttling value supported for the…",27,[[]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",27,[[]]],[11,"has_linear_response_delay","","Reports whether the response of the delay values is linear.",27,[[]]],[11,"has_sgx1","","Has SGX1 support.",28,[[]]],[11,"has_sgx2","","Has SGX2 support.",28,[[]]],[11,"has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","","Supports ENCLV instruction leaves EINCVIRTCHILD,…",28,[[]]],[11,"has_encls_leaves_etrackc_erdinfo_eldbc_elduc","","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC,…",28,[[]]],[11,"miscselect","","Bit vector of supported extended SGX features.",28,[[]]],[11,"max_enclave_size_non_64bit","","The maximum supported enclave size in non-64-bit mode is…",28,[[]]],[11,"max_enclave_size_64bit","","The maximum supported enclave size in 64-bit mode is…",28,[[]]],[11,"secs_attributes","","Reports the valid bits of SECS.ATTRIBUTES[127:0] that…",28,[[]]],[11,"iter","","Iterator over SGX sub-leafs.",28,[[],["sgxsectioniter",3]]],[11,"physical_base","","The physical address of the base of the EPC section",29,[[]]],[11,"size","","Size of the corresponding EPC section within the Processor…",29,[[]]],[11,"has_rtit_cr3_match","","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set…",30,[[]]],[11,"has_configurable_psb_and_cycle_accurate_mode","","If true, Indicates support of Configurable PSB and…",30,[[]]],[11,"has_ip_tracestop_filtering","","If true, Indicates support of IP Filtering, TraceStop…",30,[[]]],[11,"has_mtc_timing_packet_coefi_suppression","","If true, Indicates support of MTC timing packet and…",30,[[]]],[11,"has_ptwrite","","Indicates support of PTWRITE. Writes can set…",30,[[]]],[11,"has_power_event_trace","","Support of Power Event Trace. Writes can set…",30,[[]]],[11,"has_topa","","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA =…",30,[[]]],[11,"has_topa_maximum_entries","","If true, ToPA tables can hold any number of output…",30,[[]]],[11,"has_single_range_output_scheme","","If true, Indicates support of Single-Range Output scheme.",30,[[]]],[11,"has_trace_transport_subsystem","","If true, Indicates support of output to Trace Transport…",30,[[]]],[11,"has_lip_with_cs_base","","If true, Generated packets which contain IP payloads have…",30,[[]]],[11,"configurable_address_ranges","","Number of configurable Address Ranges for filtering (Bits…",30,[[]]],[11,"supported_mtc_period_encodings","","Bitmap of supported MTC period encodings (Bit 31:16).",30,[[]]],[11,"supported_cycle_threshold_value_encodings","","Bitmap of supported Cycle Threshold value encodings (Bits…",30,[[]]],[11,"supported_psb_frequency_encodings","","Bitmap of supported Configurable PSB frequency encodings…",30,[[]]],[11,"denominator","","An unsigned integer which is the denominator of the…",31,[[]]],[11,"numerator","","An unsigned integer which is the numerator of the…",31,[[]]],[11,"nominal_frequency","","An unsigned integer which is the nominal frequency of the…",31,[[]]],[11,"tsc_frequency","","“TSC frequency” = “core crystal clock frequency” * EBX/EAX.",31,[[],["option",4]]],[11,"processor_base_frequency","","Processor Base Frequency (in MHz).",32,[[]]],[11,"processor_max_frequency","","Maximum Frequency (in MHz).",32,[[]]],[11,"bus_frequency","","Bus (Reference) Frequency (in MHz).",32,[[]]],[11,"has_4k_entries","","4K page size entries supported by this structure",33,[[]]],[11,"has_2mb_entries","","2MB page size entries supported by this structure",33,[[]]],[11,"has_4mb_entries","","4MB page size entries supported by this structure",33,[[]]],[11,"has_1gb_entries","","1GB page size entries supported by this structure",33,[[]]],[11,"is_fully_associative","","Fully associative structure",33,[[]]],[11,"partitioning","","Partitioning (0: Soft partitioning between the logical…",33,[[]]],[11,"ways","","Ways of associativity.",33,[[]]],[11,"sets","","Number of Sets.",33,[[]]],[11,"cache_type","","Translation cache type field.",33,[[],["dattype",4]]],[11,"cache_level","","Translation cache level (starts at 1)",33,[[]]],[11,"max_addressable_ids","","Maximum number of addressable IDs for logical processors…",33,[[]]],[11,"get_soc_vendor_id","","",34,[[]]],[11,"get_project_id","","",34,[[]]],[11,"get_stepping_id","","",34,[[]]],[11,"get_vendor_brand","","",34,[[],["socvendorbrand",3]]],[11,"get_vendor_attributes","","",34,[[],[["socvendorattributesiter",3],["option",4]]]],[11,"as_string","","",35,[[]]],[11,"identify","","",36,[[],["hypervisor",4]]],[11,"tsc_frequency","","TSC frequency in kHz.",36,[[],["option",4]]],[11,"apic_frequency","","(Virtual) Bus (local apic timer) frequency in kHz.",36,[[],["option",4]]],[11,"processor_brand_string","","Retrieve processor brand string.",37,[[],["option",4]]],[11,"extended_signature","","Extended Processor Signature and Feature Bits.",37,[[],["option",4]]],[11,"cache_line_size","","Cache Line size in bytes",37,[[],["option",4]]],[11,"l2_associativity","","L2 Associativity field",37,[[],[["option",4],["l2associativity",4]]]],[11,"cache_size","","Cache size in 1K units",37,[[],["option",4]]],[11,"physical_address_bits","","#Physical Address Bits",37,[[],["option",4]]],[11,"linear_address_bits","","#Linear Address Bits",37,[[],["option",4]]],[11,"has_invariant_tsc","","Is Invariant TSC available?",37,[[]]],[11,"has_lahf_sahf","","Is LAHF/SAHF available in 64-bit mode?",37,[[]]],[11,"has_lzcnt","","Is LZCNT available?",37,[[]]],[11,"has_prefetchw","","Is PREFETCHW available?",37,[[]]],[11,"has_syscall_sysret","","Are fast system calls available.",37,[[]]],[11,"has_execute_disable","","Is there support for execute disable bit.",37,[[]]],[11,"has_1gib_pages","","Is there support for 1GiB pages.",37,[[]]],[11,"has_rdtscp","","Check support for rdtscp instruction.",37,[[]]],[11,"has_64bit_mode","","Check support for 64-bit mode.",37,[[]]],[11,"has_sme","","Secure Memory Encryption is supported if set.",38,[[]]],[11,"has_sev","","Secure Encrypted Virtualization is supported if set.",38,[[]]],[11,"has_page_flush_msr","","The Page Flush MSR is available if set.",38,[[]]],[11,"has_sev_es","","SEV Encrypted State is supported if set.",38,[[]]],[11,"physical_address_reduction","","",38,[[]]],[11,"c_bit_position","","",38,[[]]],[11,"max_encrypted_guests","","",38,[[]]],[11,"min_sev_no_es_asid","","",38,[[]]],[14,"cpuid","","Macro which queries cpuid directly.",null,null],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into_iter","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into_iter","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"eq","","",4,[[["cachetype",4]]]],[11,"eq","","",5,[[["topologytype",4]]]],[11,"eq","","",8,[[["hypervisor",4]]]],[11,"ne","","",8,[[["hypervisor",4]]]],[11,"eq","","",9,[[["l2associativity",4]]]],[11,"next","","Iterate over all cache information.",39,[[],[["option",4],["cacheinfo",3]]]],[11,"next","","Iterate over all caches for this CPU. Note: cpuid is…",40,[[],[["option",4],["cacheparameter",3]]]],[11,"next","","",41,[[],[["option",4],["extendedtopologylevel",3]]]],[11,"next","","",42,[[],[["extendedstate",3],["option",4]]]],[11,"next","","",43,[[],[["sgxsectioninfo",4],["option",4]]]],[11,"next","","Iterate over each sub-leaf with an address translation…",44,[[],[["datinfo",3],["option",4]]]],[11,"next","","Iterate over all SoC vendor specific attributes.",45,[[],[["cpuidresult",3],["option",4]]]],[11,"clone","","",0,[[],["cpuidresult",3]]],[11,"clone","","",3,[[],["cacheinfotype",4]]],[11,"clone","","",1,[[],["cacheinfo",3]]],[11,"clone","","",14,[[],["cacheparameter",3]]],[11,"default","","",10,[[],["cpuid",3]]],[11,"default","","",0,[[],["cpuidresult",3]]],[11,"default","","",11,[[],["vendorinfo",3]]],[11,"default","","",39,[[],["cacheinfoiter",3]]],[11,"default","","",3,[[],["cacheinfotype",4]]],[11,"default","","",1,[[],["cacheinfo",3]]],[11,"default","","",12,[[],["processorserial",3]]],[11,"default","","",13,[[],["featureinfo",3]]],[11,"default","","",40,[[],["cacheparametersiter",3]]],[11,"default","","",14,[[],["cacheparameter",3]]],[11,"default","","",4,[[],["cachetype",4]]],[11,"default","","",15,[[],["monitormwaitinfo",3]]],[11,"default","","",16,[[],["thermalpowerinfo",3]]],[11,"default","","",17,[[],["extendedfeatures",3]]],[11,"default","","",18,[[],["directcacheaccessinfo",3]]],[11,"default","","",19,[[],["performancemonitoringinfo",3]]],[11,"default","","",41,[[],["extendedtopologyiter",3]]],[11,"default","","",20,[[],["extendedtopologylevel",3]]],[11,"default","","",5,[[],["topologytype",4]]],[11,"default","","",21,[[],["extendedstateinfo",3]]],[11,"default","","",42,[[],["extendedstateiter",3]]],[11,"default","","",2,[[],["extendedstate",3]]],[11,"default","","",22,[[],["rdtmonitoringinfo",3]]],[11,"default","","",23,[[],["l3monitoringinfo",3]]],[11,"default","","",24,[[],["rdtallocationinfo",3]]],[11,"default","","",25,[[],["l3catinfo",3]]],[11,"default","","",26,[[],["l2catinfo",3]]],[11,"default","","",27,[[],["membwallocationinfo",3]]],[11,"default","","",28,[[],["sgxinfo",3]]],[11,"default","","",43,[[],["sgxsectioniter",3]]],[11,"default","","",6,[[],["sgxsectioninfo",4]]],[11,"default","","",29,[[],["epcsection",3]]],[11,"default","","",30,[[],["processortraceinfo",3]]],[11,"default","","",31,[[],["tscinfo",3]]],[11,"default","","",32,[[],["processorfrequencyinfo",3]]],[11,"default","","",44,[[],["datiter",3]]],[11,"default","","",33,[[],["datinfo",3]]],[11,"default","","",7,[[],["dattype",4]]],[11,"default","","",34,[[],["socvendorinfo",3]]],[11,"default","","",45,[[],["socvendorattributesiter",3]]],[11,"default","","",35,[[],["socvendorbrand",3]]],[11,"default","","",37,[[],["extendedfunctioninfo",3]]],[11,"default","","",9,[[],["l2associativity",4]]],[11,"default","","",38,[[],["memoryencryptioninfo",3]]]],"p":[[3,"CpuIdResult"],[3,"CacheInfo"],[3,"ExtendedState"],[4,"CacheInfoType"],[4,"CacheType"],[4,"TopologyType"],[4,"SgxSectionInfo"],[4,"DatType"],[4,"Hypervisor"],[4,"L2Associativity"],[3,"CpuId"],[3,"VendorInfo"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[3,"CacheParameter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateInfo"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxInfo"],[3,"EpcSection"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatInfo"],[3,"SoCVendorInfo"],[3,"SoCVendorBrand"],[3,"HypervisorInfo"],[3,"ExtendedFunctionInfo"],[3,"MemoryEncryptionInfo"],[3,"CacheInfoIter"],[3,"CacheParametersIter"],[3,"ExtendedTopologyIter"],[3,"ExtendedStateIter"],[3,"SgxSectionIter"],[3,"DatIter"],[3,"SoCVendorAttributesIter"]]},\
"trapframe":{"doc":"","i":[[3,"TrapFrame","trapframe","Trap frame of kernel interrupt",null,null],[12,"rax","","",0,null],[12,"rbx","","",0,null],[12,"rcx","","",0,null],[12,"rdx","","",0,null],[12,"rsi","","",0,null],[12,"rdi","","",0,null],[12,"rbp","","",0,null],[12,"rsp","","",0,null],[12,"r8","","",0,null],[12,"r9","","",0,null],[12,"r10","","",0,null],[12,"r11","","",0,null],[12,"r12","","",0,null],[12,"r13","","",0,null],[12,"r14","","",0,null],[12,"r15","","",0,null],[12,"_pad","","",0,null],[12,"trap_num","","",0,null],[12,"error_code","","",0,null],[12,"rip","","",0,null],[12,"cs","","",0,null],[12,"rflags","","",0,null],[3,"UserContext","","User space context",null,null],[12,"general","","",1,null],[12,"trap_num","","",1,null],[12,"error_code","","",1,null],[3,"GeneralRegs","","General registers",null,null],[12,"rax","","",2,null],[12,"rbx","","",2,null],[12,"rcx","","",2,null],[12,"rdx","","",2,null],[12,"rsi","","",2,null],[12,"rdi","","",2,null],[12,"rbp","","",2,null],[12,"rsp","","",2,null],[12,"r8","","",2,null],[12,"r9","","",2,null],[12,"r10","","",2,null],[12,"r11","","",2,null],[12,"r12","","",2,null],[12,"r13","","",2,null],[12,"r14","","",2,null],[12,"r15","","",2,null],[12,"rip","","",2,null],[12,"rflags","","",2,null],[12,"fsbase","","",2,null],[12,"gsbase","","",2,null],[5,"init","","Initialize interrupt handling on x86_64.",null,[[]]],[11,"run","","Go to user space with the context, and come back when a…",1,[[]]],[11,"get_syscall_num","","Get number of syscall",1,[[]]],[11,"get_syscall_ret","","Get return value of syscall",1,[[]]],[11,"set_syscall_ret","","Set return value of syscall",1,[[]]],[11,"get_syscall_args","","Get syscall args",1,[[]]],[11,"set_ip","","Set instruction pointer",1,[[]]],[11,"set_sp","","Set stack pointer",1,[[]]],[11,"get_sp","","Get stack pointer",1,[[]]],[11,"set_tls","","Set tls pointer",1,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"eq","","",1,[[["usercontext",3]]]],[11,"ne","","",1,[[["usercontext",3]]]],[11,"eq","","",2,[[["generalregs",3]]]],[11,"ne","","",2,[[["generalregs",3]]]],[11,"clone","","",0,[[],["trapframe",3]]],[11,"clone","","",1,[[],["usercontext",3]]],[11,"clone","","",2,[[],["generalregs",3]]],[11,"default","","",0,[[],["trapframe",3]]],[11,"default","","",1,[[],["usercontext",3]]],[11,"default","","",2,[[],["generalregs",3]]]],"p":[[3,"TrapFrame"],[3,"UserContext"],[3,"GeneralRegs"]]},\
"x86_64":{"doc":"This crate provides x86_64 specific functions and data…","i":[[4,"PrivilegeLevel","x86_64","Represents a protection ring level.",null,null],[13,"Ring0","","Privilege-level 0 (most privilege): This level is used by…",0,null],[13,"Ring1","","Privilege-level 1 (moderate privilege): This level is used…",0,null],[13,"Ring2","","Privilege-level 2 (moderate privilege): Like level 1, this…",0,null],[13,"Ring3","","Privilege-level 3 (least privilege): This level is used by…",0,null],[0,"addr","","Physical and virtal addresses manipulation",null,null],[3,"VirtAddr","x86_64::addr","A canonical 64-bit virtual memory address.",null,null],[3,"PhysAddr","","A 64-bit physical memory address.",null,null],[3,"VirtAddrNotValid","","A passed `u64` was not a valid virtual address.",null,null],[3,"PhysAddrNotValid","","A passed `u64` was not a valid physical address.",null,null],[5,"align_down","","Align address downwards.",null,[[]]],[5,"align_up","","Align address upwards.",null,[[]]],[11,"new","","Creates a new canonical virtual address.",1,[[],["virtaddr",3]]],[11,"try_new","","Tries to create a new canonical virtual address.",1,[[],[["result",4],["virtaddr",3],["virtaddrnotvalid",3]]]],[11,"new_truncate","","Creates a new canonical virtual address, throwing out bits…",1,[[],["virtaddr",3]]],[11,"new_unchecked","","Alias for [`new_truncate`][VirtAddr::new_truncate] for…",1,[[],["virtaddr",3]]],[11,"new_unsafe","","Creates a new virtual address, without any checks.",1,[[],["virtaddr",3]]],[11,"zero","","Creates a virtual address that points to `0`.",1,[[],["virtaddr",3]]],[11,"as_u64","","Converts the address to an `u64`.",1,[[]]],[11,"from_ptr","","Creates a virtual address from the given pointer",1,[[]]],[11,"as_ptr","","Converts the address to a raw pointer.",1,[[]]],[11,"as_mut_ptr","","Converts the address to a mutable raw pointer.",1,[[]]],[11,"align_up","","Aligns the virtual address upwards to the given alignment.",1,[[]]],[11,"align_down","","Aligns the virtual address downwards to the given alignment.",1,[[]]],[11,"is_aligned","","Checks whether the virtual address has the demanded…",1,[[]]],[11,"page_offset","","Returns the 12-bit page offset of this virtual address.",1,[[],["pageoffset",3]]],[11,"p1_index","","Returns the 9-bit level 1 page table index.",1,[[],["pagetableindex",3]]],[11,"p2_index","","Returns the 9-bit level 2 page table index.",1,[[],["pagetableindex",3]]],[11,"p3_index","","Returns the 9-bit level 3 page table index.",1,[[],["pagetableindex",3]]],[11,"p4_index","","Returns the 9-bit level 4 page table index.",1,[[],["pagetableindex",3]]],[11,"new","","Creates a new physical address.",2,[[],["physaddr",3]]],[11,"new_truncate","","Creates a new physical address, throwing bits 52..64 away.",2,[[],["physaddr",3]]],[11,"new_unsafe","","Creates a new physical address, without any checks.",2,[[],["physaddr",3]]],[11,"try_new","","Tries to create a new physical address.",2,[[],[["physaddr",3],["physaddrnotvalid",3],["result",4]]]],[11,"zero","","Creates a physical address that points to `0`.",2,[[],["physaddr",3]]],[11,"as_u64","","Converts the address to an `u64`.",2,[[]]],[11,"is_null","","Convenience method for checking if a physical address is…",2,[[]]],[11,"align_up","","Aligns the physical address upwards to the given alignment.",2,[[]]],[11,"align_down","","Aligns the physical address downwards to the given…",2,[[]]],[11,"is_aligned","","Checks whether the physical address has the demanded…",2,[[]]],[0,"instructions","x86_64","Special x86_64 instructions.",null,null],[5,"hlt","x86_64::instructions","Halts the CPU until the next interrupt arrives.",null,[[]]],[5,"bochs_breakpoint","","Emits a \'magic breakpoint\' instruction for the Bochs CPU…",null,[[]]],[0,"interrupts","","Enabling and disabling interrupts",null,null],[5,"are_enabled","x86_64::instructions::interrupts","Returns whether interrupts are enabled.",null,[[]]],[5,"enable","","Enable interrupts.",null,[[]]],[5,"disable","","Disable interrupts.",null,[[]]],[5,"without_interrupts","","Run a closure with disabled interrupts.",null,[[]]],[5,"enable_interrupts_and_hlt","","Atomically enable interrupts and put the CPU to sleep",null,[[]]],[5,"int3","","Cause a breakpoint exception by invoking the `int3`…",null,[[]]],[0,"port","x86_64::instructions","Access to I/O ports",null,null],[3,"PortReadOnly","x86_64::instructions::port","A read only I/O port.",null,null],[3,"PortWriteOnly","","A write only I/O port.",null,null],[3,"Port","","An I/O port.",null,null],[11,"new","","Creates a read only I/O port with the given port number.",3,[[],["portreadonly",3]]],[11,"read","","Reads from the port.",3,[[]]],[11,"new","","Creates a write only I/O port with the given port number.",4,[[],["portwriteonly",3]]],[11,"write","","Writes to the port.",4,[[]]],[11,"new","","Creates an I/O port with the given port number.",5,[[],["port",3]]],[11,"read","","Reads from the port.",5,[[]]],[11,"write","","Writes to the port.",5,[[]]],[0,"random","x86_64::instructions","Support for build-in RNGs",null,null],[3,"RdRand","x86_64::instructions::random","Used to obtain random numbers using x86_64\'s RDRAND opcode",null,null],[11,"new","","Creates Some(RdRand) if RDRAND is supported, None otherwise",6,[[],["option",4]]],[11,"get_u64","","Uniformly sampled u64. May fail in rare circumstances or…",6,[[],["option",4]]],[11,"get_u32","","Uniformly sampled u32. May fail in rare circumstances or…",6,[[],["option",4]]],[11,"get_u16","","Uniformly sampled u16. May fail in rare circumstances or…",6,[[],["option",4]]],[0,"segmentation","x86_64::instructions","Provides functions to read and write segment registers.",null,null],[5,"set_cs","x86_64::instructions::segmentation","Reload code segment register.",null,[[["segmentselector",3]]]],[5,"load_ss","","Reload stack segment register.",null,[[["segmentselector",3]]]],[5,"load_ds","","Reload data segment register.",null,[[["segmentselector",3]]]],[5,"load_es","","Reload es segment register.",null,[[["segmentselector",3]]]],[5,"load_fs","","Reload fs segment register.",null,[[["segmentselector",3]]]],[5,"load_gs","","Reload gs segment register.",null,[[["segmentselector",3]]]],[5,"swap_gs","","Swap `KernelGsBase` MSR and `GsBase` MSR.",null,[[]]],[5,"cs","","Returns the current value of the code segment register.",null,[[],["segmentselector",3]]],[0,"tables","x86_64::instructions","Functions to load GDT, IDT, and TSS structures.",null,null],[5,"lgdt","x86_64::instructions::tables","Load a GDT.",null,[[["descriptortablepointer",3]]]],[5,"lidt","","Load an IDT.",null,[[["descriptortablepointer",3]]]],[5,"load_tss","","Load the task state register using the `ltr` instruction.",null,[[["segmentselector",3]]]],[0,"tlb","x86_64::instructions","Functions to flush the translation lookaside buffer (TLB).",null,null],[5,"flush","x86_64::instructions::tlb","Invalidate the given address in the TLB using the `invlpg`…",null,[[["virtaddr",3]]]],[5,"flush_all","","Invalidate the TLB completely by reloading the CR3 register.",null,[[]]],[0,"registers","x86_64","Access to various system and model specific registers.",null,null],[5,"read_rip","x86_64::registers","Gets the current instruction pointer. Note that this is…",null,[[]]],[0,"control","","Functions to read and write control registers.",null,null],[3,"Cr0","x86_64::registers::control","Various control flags modifying the basic operation of the…",null,null],[3,"Cr0Flags","","Configuration flags of the Cr0 register.",null,null],[3,"Cr2","","Contains the Page Fault Linear Address (PFLA).",null,null],[3,"Cr3","","Contains the physical address of the level 4 page table.",null,null],[3,"Cr3Flags","","Controls cache settings for the level 4 page table.",null,null],[3,"Cr4","","Various control flags modifying the basic operation of the…",null,null],[3,"Cr4Flags","","Controls cache settings for the level 4 page table.",null,null],[11,"read","","Read the current set of CR0 flags.",7,[[],["cr0flags",3]]],[11,"read_raw","","Read the current raw CR0 value.",7,[[]]],[11,"write","","Write CR0 flags.",7,[[["cr0flags",3]]]],[11,"write_raw","","Write raw CR0 flags.",7,[[]]],[11,"update","","Updates CR0 flags.",7,[[]]],[11,"read","","Read the current page fault linear address from the CR2…",8,[[],["virtaddr",3]]],[11,"read","","Read the current P4 table address from the CR3 register.",9,[[]]],[11,"write","","Write a new P4 table address into the CR3 register.",9,[[["physframe",3],["cr3flags",3]]]],[11,"read","","Read the current set of CR4 flags.",10,[[],["cr4flags",3]]],[11,"read_raw","","Read the current raw CR4 value.",10,[[]]],[11,"write","","Write CR4 flags.",10,[[["cr4flags",3]]]],[11,"write_raw","","Write raw CR4 flags.",10,[[]]],[11,"update","","Updates CR4 flags.",10,[[]]],[18,"PROTECTED_MODE_ENABLE","","Enables protected mode.",11,null],[18,"MONITOR_COPROCESSOR","","Enables monitoring of the coprocessor, typical for x87…",11,null],[18,"EMULATE_COPROCESSOR","","Force all x87 and MMX instructions to cause an exception.",11,null],[18,"TASK_SWITCHED","","Automatically set to 1 on hardware task switch.",11,null],[18,"NUMERIC_ERROR","","Enables the native error reporting mechanism for x87 FPU…",11,null],[18,"WRITE_PROTECT","","Controls whether supervisor-level writes to read-only…",11,null],[18,"ALIGNMENT_MASK","","Enables automatic alignment checking.",11,null],[18,"NOT_WRITE_THROUGH","","Ignored. Used to control write-back/write-through cache…",11,null],[18,"CACHE_DISABLE","","Disables internal caches (only for some cases).",11,null],[18,"PAGING","","Enables page translation.",11,null],[11,"empty","","Returns an empty set of flags",11,[[],["cr0flags",3]]],[11,"all","","Returns the set containing all flags.",11,[[],["cr0flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",11,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",11,[[],[["option",4],["cr0flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",11,[[],["cr0flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",11,[[],["cr0flags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",11,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",11,[[["cr0flags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",11,[[["cr0flags",3]]]],[11,"insert","","Inserts the specified flags in-place.",11,[[["cr0flags",3]]]],[11,"remove","","Removes the specified flags in-place.",11,[[["cr0flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",11,[[["cr0flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",11,[[["cr0flags",3]]]],[18,"PAGE_LEVEL_WRITETHROUGH","","Use a writethrough cache policy for the P4 table (else a…",12,null],[18,"PAGE_LEVEL_CACHE_DISABLE","","Disable caching for the P4 table.",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["cr3flags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["cr3flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",12,[[],[["cr3flags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",12,[[],["cr3flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[],["cr3flags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",12,[[["cr3flags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",12,[[["cr3flags",3]]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["cr3flags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["cr3flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["cr3flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",12,[[["cr3flags",3]]]],[18,"VIRTUAL_8086_MODE_EXTENSIONS","","Enables hardware-supported performance enhancements for…",13,null],[18,"PROTECTED_MODE_VIRTUAL_INTERRUPTS","","Enables support for protected-mode virtual interrupts.",13,null],[18,"TIMESTAMP_DISABLE","","When set, only privilege-level 0 can execute the RDTSC or…",13,null],[18,"DEBUGGING_EXTENSIONS","","Enables I/O breakpoint capability and enforces treatment…",13,null],[18,"PAGE_SIZE_EXTENSION","","Enables the use of 4MB physical frames; ignored in long…",13,null],[18,"PHYSICAL_ADDRESS_EXTENSION","","Enables physical address extension and 2MB physical…",13,null],[18,"MACHINE_CHECK_EXCEPTION","","Enables the machine-check exception mechanism.",13,null],[18,"PAGE_GLOBAL","","Enables the global-page mechanism, which allows to make…",13,null],[18,"PERFORMANCE_MONITOR_COUNTER","","Allows software running at any privilege level to use the…",13,null],[18,"OSFXSR","","Enable the use of legacy SSE instructions; allows using…",13,null],[18,"OSXMMEXCPT_ENABLE","","Enables the SIMD floating-point exception (#XF) for…",13,null],[18,"USER_MODE_INSTRUCTION_PREVENTION","","Prevents the execution of the SGDT, SIDT, SLDT, SMSW, and…",13,null],[18,"L5_PAGING","","Enables 5-level paging on supported CPUs.",13,null],[18,"VIRTUAL_MACHINE_EXTENSIONS","","Enables VMX insturctions.",13,null],[18,"SAFER_MODE_EXTENSIONS","","Enables SMX instructions.",13,null],[18,"FSGSBASE","","Enables software running in 64-bit mode at any privilege…",13,null],[18,"PCID","","Enables process-context identifiers (PCIDs).",13,null],[18,"OSXSAVE","","Enables extendet processor state management instructions,…",13,null],[18,"SUPERVISOR_MODE_EXECUTION_PROTECTION","","Prevents the execution of instructions that reside in…",13,null],[18,"SUPERVISOR_MODE_ACCESS_PREVENTION","","Enables restrictions for supervisor-mode software when…",13,null],[18,"PROTECTION_KEY","","Enables 4-level paging to associate each linear address…",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["cr4flags",3]]],[11,"all","","Returns the set containing all flags.",13,[[],["cr4flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",13,[[],[["option",4],["cr4flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",13,[[],["cr4flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[],["cr4flags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",13,[[["cr4flags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",13,[[["cr4flags",3]]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["cr4flags",3]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["cr4flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["cr4flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",13,[[["cr4flags",3]]]],[0,"model_specific","x86_64::registers","Functions to read and write model specific registers.",null,null],[3,"Msr","x86_64::registers::model_specific","A model specific register.",null,null],[3,"Efer","","The Extended Feature Enable Register.",null,null],[3,"FsBase","","FS.Base Model Specific Register.",null,null],[3,"GsBase","","GS.Base Model Specific Register.",null,null],[3,"KernelGsBase","","KernelGsBase Model Specific Register.",null,null],[3,"Star","","Syscall Register: STAR",null,null],[3,"LStar","","Syscall Register: LSTAR",null,null],[3,"SFMask","","Syscall Register: SFMASK",null,null],[3,"EferFlags","","Flags of the Extended Feature Enable Register.",null,null],[11,"read","","Read 64 bits msr register.",14,[[]]],[11,"write","","Write 64 bits to msr register.",14,[[]]],[11,"read","","Read the current EFER flags.",15,[[],["eferflags",3]]],[11,"read_raw","","Read the current raw EFER flags.",15,[[]]],[11,"write","","Write the EFER flags, preserving reserved values.",15,[[["eferflags",3]]]],[11,"write_raw","","Write the EFER flags.",15,[[]]],[11,"update","","Update EFER flags.",15,[[]]],[11,"read","","Read the current FsBase register.",16,[[],["virtaddr",3]]],[11,"write","","Write a given virtual address to the FS.Base register.",16,[[["virtaddr",3]]]],[11,"read","","Read the current GsBase register.",17,[[],["virtaddr",3]]],[11,"write","","Write a given virtual address to the GS.Base register.",17,[[["virtaddr",3]]]],[11,"read","","Read the current KernelGsBase register.",18,[[],["virtaddr",3]]],[11,"write","","Write a given virtual address to the KernelGsBase register.",18,[[["virtaddr",3]]]],[11,"read_raw","","Read the Ring 0 and Ring 3 segment bases. The remaining…",19,[[]]],[11,"read","","Read the Ring 0 and Ring 3 segment bases. Returns - CS…",19,[[]]],[11,"write_raw","","Write the Ring 0 and Ring 3 segment bases. The remaining…",19,[[]]],[11,"write","","Write the Ring 0 and Ring 3 segment bases. The remaining…",19,[[["segmentselector",3]],["result",4]]],[11,"read","","Read the current LStar register. This holds the target RIP…",20,[[],["virtaddr",3]]],[11,"write","","Write a given virtual address to the LStar register. This…",20,[[["virtaddr",3]]]],[11,"read","","Read to the SFMask register. The SFMASK register is used…",21,[[],["rflags",3]]],[11,"write","","Write to the SFMask register. The SFMASK register is used…",21,[[["rflags",3]]]],[11,"new","","Create an instance from a register.",14,[[],["msr",3]]],[18,"MSR","","The underlying model specific register.",15,null],[18,"MSR","","The underlying model specific register.",16,null],[18,"MSR","","The underlying model specific register.",17,null],[18,"MSR","","The underlying model specific register.",18,null],[18,"MSR","","The underlying model specific register.",19,null],[18,"MSR","","The underlying model specific register.",20,null],[18,"MSR","","The underlying model specific register.",21,null],[18,"SYSTEM_CALL_EXTENSIONS","","Enables the `syscall` and `sysret` instructions.",22,null],[18,"LONG_MODE_ENABLE","","Activates long mode, requires activating paging.",22,null],[18,"LONG_MODE_ACTIVE","","Indicates that long mode is active.",22,null],[18,"NO_EXECUTE_ENABLE","","Enables the no-execute page-protection feature.",22,null],[18,"SECURE_VIRTUAL_MACHINE_ENABLE","","Enables SVM extensions.",22,null],[18,"LONG_MODE_SEGMENT_LIMIT_ENABLE","","Enable certain limit checks in 64-bit mode.",22,null],[18,"FAST_FXSAVE_FXRSTOR","","Enable the `fxsave` and `fxrstor` instructions to execute…",22,null],[18,"TRANSLATION_CACHE_EXTENSION","","Changes how the `invlpg` instruction operates on TLB…",22,null],[11,"empty","","Returns an empty set of flags",22,[[],["eferflags",3]]],[11,"all","","Returns the set containing all flags.",22,[[],["eferflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",22,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",22,[[],[["option",4],["eferflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",22,[[],["eferflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",22,[[],["eferflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",22,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",22,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",22,[[["eferflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",22,[[["eferflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",22,[[["eferflags",3]]]],[11,"remove","","Removes the specified flags in-place.",22,[[["eferflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",22,[[["eferflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",22,[[["eferflags",3]]]],[0,"rflags","x86_64::registers","Processor state stored in the RFLAGS register.",null,null],[3,"RFlags","x86_64::registers::rflags","The RFLAGS register.",null,null],[5,"read","","Returns the current value of the RFLAGS register.",null,[[],["rflags",3]]],[5,"read_raw","","Returns the raw current value of the RFLAGS register.",null,[[]]],[5,"write","","Writes the RFLAGS register, preserves reserved bits.",null,[[["rflags",3]]]],[5,"write_raw","","Writes the RFLAGS register.",null,[[]]],[18,"ID","","Processor feature identification flag.",23,null],[18,"VIRTUAL_INTERRUPT_PENDING","","Indicates that an external, maskable interrupt is pending.",23,null],[18,"VIRTUAL_INTERRUPT","","Virtual image of the INTERRUPT_FLAG bit.",23,null],[18,"ALIGNMENT_CHECK","","Enable automatic alignment checking if CR0.AM is set. Only…",23,null],[18,"VIRTUAL_8086_MODE","","Enable the virtual-8086 mode.",23,null],[18,"RESUME_FLAG","","Allows to restart an instruction following an instrucion…",23,null],[18,"NESTED_TASK","","Used by `iret` in hardware task switch mode to determine…",23,null],[18,"IOPL_HIGH","","The high bit of the I/O Privilege Level field.",23,null],[18,"IOPL_LOW","","The low bit of the I/O Privilege Level field.",23,null],[18,"OVERFLOW_FLAG","","Set by hardware to indicate that the sign bit of the…",23,null],[18,"DIRECTION_FLAG","","Determines the order in which strings are processed.",23,null],[18,"INTERRUPT_FLAG","","Enable interrupts.",23,null],[18,"TRAP_FLAG","","Enable single-step mode for debugging.",23,null],[18,"SIGN_FLAG","","Set by hardware if last arithmetic operation resulted in a…",23,null],[18,"ZERO_FLAG","","Set by hardware if last arithmetic operation resulted in a…",23,null],[18,"AUXILIARY_CARRY_FLAG","","Set by hardware if last arithmetic operation generated a…",23,null],[18,"PARITY_FLAG","","Set by hardware if last result has an even number of 1…",23,null],[18,"CARRY_FLAG","","Set by hardware if last arithmetic operation generated a…",23,null],[11,"empty","","Returns an empty set of flags",23,[[],["rflags",3]]],[11,"all","","Returns the set containing all flags.",23,[[],["rflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",23,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",23,[[],[["rflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",23,[[],["rflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",23,[[],["rflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",23,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",23,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",23,[[["rflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",23,[[["rflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",23,[[["rflags",3]]]],[11,"remove","","Removes the specified flags in-place.",23,[[["rflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",23,[[["rflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",23,[[["rflags",3]]]],[0,"structures","x86_64","Representations of various x86 specific structures and…",null,null],[3,"DescriptorTablePointer","x86_64::structures","A struct describing a pointer to a descriptor table (GDT /…",null,null],[12,"limit","","Size of the DT.",24,null],[12,"base","","Pointer to the memory region containing the DT.",24,null],[0,"gdt","","Types for the Global Descriptor Table and segment selectors.",null,null],[3,"SegmentSelector","x86_64::structures::gdt","Specifies which element to load into a segment from…",null,null],[12,"0","","",25,null],[3,"GlobalDescriptorTable","","A 64-bit mode global descriptor table (GDT).",null,null],[3,"DescriptorFlags","","Flags for a GDT descriptor. Not all flags are valid for…",null,null],[4,"Descriptor","","A 64-bit mode segment descriptor.",null,null],[13,"UserSegment","","Descriptor for a code or data segment.",26,null],[13,"SystemSegment","","A system segment descriptor such as a LDT or TSS descriptor.",26,null],[11,"new","","Creates a new SegmentSelector",25,[[["privilegelevel",4]],["segmentselector",3]]],[11,"index","","Returns the GDT index.",25,[[]]],[11,"rpl","","Returns the requested privilege level.",25,[[],["privilegelevel",4]]],[11,"set_rpl","","Set the privilege level for this Segment selector.",25,[[["privilegelevel",4]]]],[11,"new","","Creates an empty GDT.",27,[[],["globaldescriptortable",3]]],[11,"add_entry","","Adds the given segment descriptor to the GDT, returning…",27,[[["descriptor",4]],["segmentselector",3]]],[11,"load","","Loads the GDT in the CPU using the `lgdt` instruction.…",27,[[]]],[18,"WRITABLE","","For data segments, this flag sets the segment as writable.…",28,null],[18,"CONFORMING","","Marks a code segment as “conforming”. This influences the…",28,null],[18,"EXECUTABLE","","This flag must be set for code segments.",28,null],[18,"USER_SEGMENT","","This flag must be set for user segments (in contrast to…",28,null],[18,"PRESENT","","Must be set for any segment, causes a segment not present…",28,null],[18,"LONG_MODE","","Must be set for long mode code segments.",28,null],[18,"DPL_RING_3","","The DPL for this descriptor is Ring 3",28,null],[11,"empty","","Returns an empty set of flags",28,[[],["descriptorflags",3]]],[11,"all","","Returns the set containing all flags.",28,[[],["descriptorflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",28,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",28,[[],[["option",4],["descriptorflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",28,[[],["descriptorflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",28,[[],["descriptorflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",28,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",28,[[["descriptorflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",28,[[["descriptorflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",28,[[["descriptorflags",3]]]],[11,"remove","","Removes the specified flags in-place.",28,[[["descriptorflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",28,[[["descriptorflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",28,[[["descriptorflags",3]]]],[11,"kernel_code_segment","","Creates a segment descriptor for a long mode kernel code…",26,[[],["descriptor",4]]],[11,"user_data_segment","","Creates a segment descriptor for a long mode ring 3 data…",26,[[],["descriptor",4]]],[11,"user_code_segment","","Creates a segment descriptor for a long mode ring 3 code…",26,[[],["descriptor",4]]],[11,"tss_segment","","Creates a TSS system descriptor for the given TSS.",26,[[["taskstatesegment",3]],["descriptor",4]]],[0,"idt","x86_64::structures","Provides types for the Interrupt Descriptor Table and its…",null,null],[3,"InterruptDescriptorTable","x86_64::structures::idt","An Interrupt Descriptor Table with 256 entries.",null,null],[12,"divide_error","","A divide error (`#DE`) occurs when the denominator of a…",29,null],[12,"debug","","When the debug-exception mechanism is enabled, a `#DB`…",29,null],[12,"non_maskable_interrupt","","An non maskable interrupt exception (NMI) occurs as a…",29,null],[12,"breakpoint","","A breakpoint (`#BP`) exception occurs when an `INT3`…",29,null],[12,"overflow","","An overflow exception (`#OF`) occurs as a result of…",29,null],[12,"bound_range_exceeded","","A bound-range exception (`#BR`) exception can occur as a…",29,null],[12,"invalid_opcode","","An invalid opcode exception (`#UD`) occurs when an attempt…",29,null],[12,"device_not_available","","A device not available exception (`#NM`) occurs under any…",29,null],[12,"double_fault","","A double fault (`#DF`) exception can occur when a second…",29,null],[12,"invalid_tss","","An invalid TSS exception (`#TS`) occurs only as a result…",29,null],[12,"segment_not_present","","An segment-not-present exception (`#NP`) occurs when an…",29,null],[12,"stack_segment_fault","","An stack segment exception (`#SS`) can occur in the…",29,null],[12,"general_protection_fault","","A general protection fault (`#GP`) can occur in various…",29,null],[12,"page_fault","","A page fault (`#PF`) can occur during a memory access in…",29,null],[12,"x87_floating_point","","The x87 Floating-Point Exception-Pending exception (`#MF`)…",29,null],[12,"alignment_check","","An alignment check exception (`#AC`) occurs when an…",29,null],[12,"machine_check","","The machine check exception (`#MC`) is model specific.…",29,null],[12,"simd_floating_point","","The SIMD Floating-Point Exception (`#XF`) is used to…",29,null],[12,"virtualization","","vector nr. 20",29,null],[12,"security_exception","","The Security Exception (`#SX`) signals security-sensitive…",29,null],[3,"Entry","","An Interrupt Descriptor Table entry.",null,null],[3,"EntryOptions","","Represents the options field of an IDT entry.",null,null],[3,"InterruptStackFrame","","Wrapper type for the interrupt stack frame pushed by the…",null,null],[3,"InterruptStackFrameValue","","Represents the interrupt stack frame pushed by the CPU on…",null,null],[12,"instruction_pointer","","This value points to the instruction that should be…",30,null],[12,"code_segment","","The code segment selector, padded with zeros.",30,null],[12,"cpu_flags","","The flags register before the interrupt handler was invoked.",30,null],[12,"stack_pointer","","The stack pointer at the time of the interrupt.",30,null],[12,"stack_segment","","The stack segment descriptor at the time of the interrupt…",30,null],[3,"PageFaultErrorCode","","Describes an page fault error code.",null,null],[6,"HandlerFunc","","A handler function for an interrupt or an exception…",null,null],[6,"HandlerFuncWithErrCode","","A handler function for an exception that pushes an error…",null,null],[6,"PageFaultHandlerFunc","","A page fault handler function that pushes a page fault…",null,null],[6,"DivergingHandlerFunc","","A handler function that must not return, e.g. for a…",null,null],[6,"DivergingHandlerFuncWithErrCode","","A handler function with an error code that must not…",null,null],[6,"ExceptionStackFrame","","Wrapper type for the exception stack frame pushed by the…",null,null],[11,"new","","Creates a new IDT filled with non-present entries.",29,[[],["interruptdescriptortable",3]]],[11,"reset","","Resets all entries of this IDT in place.",29,[[]]],[11,"load","","Loads the IDT in the CPU using the `lidt` command.",29,[[]]],[11,"load_unsafe","","Loads the IDT in the CPU using the `lidt` command.",29,[[]]],[11,"slice","","Returns slice of IDT entries with the specified range.",29,[[]]],[11,"slice_mut","","Returns a mutable slice of IDT entries with the specified…",29,[[]]],[11,"missing","","Creates a non-present IDT entry (but sets the must-be-one…",31,[[]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the…",31,[[["handlerfunc",6]],["entryoptions",3]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the…",31,[[["handlerfuncwitherrcode",6]],["entryoptions",3]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the…",31,[[["pagefaulthandlerfunc",6]],["entryoptions",3]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the…",31,[[["diverginghandlerfunc",6]],["entryoptions",3]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the…",31,[[["diverginghandlerfuncwitherrcode",6]],["entryoptions",3]]],[11,"set_present","","Set or reset the preset bit.",32,[[]]],[11,"disable_interrupts","","Let the CPU disable hardware interrupts when the handler…",32,[[]]],[11,"set_privilege_level","","Set the required privilege level (DPL) for invoking the…",32,[[["privilegelevel",4]]]],[11,"set_stack_index","","Assigns a Interrupt Stack Table (IST) stack to this…",32,[[]]],[11,"as_mut","","Gives mutable access to the contents of the interrupt…",33,[[],["interruptstackframevalue",3]]],[18,"PROTECTION_VIOLATION","","If this flag is set, the page fault was caused by a…",34,null],[18,"CAUSED_BY_WRITE","","If this flag is set, the memory access that caused the…",34,null],[18,"USER_MODE","","If this flag is set, an access in user mode (CPL=3) caused…",34,null],[18,"MALFORMED_TABLE","","If this flag is set, the page fault is a result of the…",34,null],[18,"INSTRUCTION_FETCH","","If this flag is set, it indicates that the access that…",34,null],[11,"empty","","Returns an empty set of flags",34,[[],["pagefaulterrorcode",3]]],[11,"all","","Returns the set containing all flags.",34,[[],["pagefaulterrorcode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",34,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",34,[[],[["pagefaulterrorcode",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",34,[[],["pagefaulterrorcode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",34,[[],["pagefaulterrorcode",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",34,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",34,[[["pagefaulterrorcode",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",34,[[["pagefaulterrorcode",3]]]],[11,"insert","","Inserts the specified flags in-place.",34,[[["pagefaulterrorcode",3]]]],[11,"remove","","Removes the specified flags in-place.",34,[[["pagefaulterrorcode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",34,[[["pagefaulterrorcode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",34,[[["pagefaulterrorcode",3]]]],[0,"paging","x86_64::structures","Abstractions for page tables and other paging related…",null,null],[3,"UnusedPhysFrame","x86_64::structures::paging","Represents a physical frame that is not used for any…",null,null],[0,"frame","","Abstractions for default-sized and huge physical memory…",null,null],[3,"PhysFrame","x86_64::structures::paging::frame","A physical memory frame.",null,null],[3,"PhysFrameRange","","An range of physical memory frames, exclusive the upper…",null,null],[12,"start","","The start of the range, inclusive.",35,null],[12,"end","","The end of the range, exclusive.",35,null],[3,"PhysFrameRangeInclusive","","An range of physical memory frames, inclusive the upper…",null,null],[12,"start","","The start of the range, inclusive.",36,null],[12,"end","","The start of the range, inclusive.",36,null],[11,"from_start_address","","Returns the frame that starts at the given virtual address.",37,[[["physaddr",3]],["result",4]]],[11,"from_start_address_unchecked","","Returns the frame that starts at the given virtual address.",37,[[["physaddr",3]]]],[11,"containing_address","","Returns the frame that contains the given physical address.",37,[[["physaddr",3]]]],[11,"start_address","","Returns the start address of the frame.",37,[[],["physaddr",3]]],[11,"size","","Returns the size the frame (4KB, 2MB or 1GB).",37,[[]]],[11,"range","","Returns a range of frames, exclusive `end`.",37,[[["physframe",3]],["physframerange",3]]],[11,"range_inclusive","","Returns a range of frames, inclusive `end`.",37,[[["physframe",3]],["physframerangeinclusive",3]]],[11,"is_empty","","Returns whether the range contains no frames.",35,[[]]],[11,"is_empty","","Returns whether the range contains no frames.",36,[[]]],[11,"new","x86_64::structures::paging","Creates a new UnusedPhysFrame from the given frame.",38,[[["physframe",3]]]],[11,"frame","","Returns the physical frame as `PhysFrame` type.",38,[[],["physframe",3]]],[0,"mapper","","Abstractions for reading and modifying the mapping of pages.",null,null],[3,"MappedPageTable","x86_64::structures::paging::mapper","A Mapper implementation that relies on a PhysAddr to…",null,null],[3,"OffsetPageTable","","A Mapper implementation that requires that the complete…",null,null],[3,"RecursivePageTable","","A recursive page table is a last level page table with an…",null,null],[3,"MapperFlush","","This type represents a page whose mapping has changed in…",null,null],[3,"MapperFlushAll","","This type represents a change of a page table requiring a…",null,null],[4,"TranslateResult","","The return value of the [`MapperAllSizes::translate`]…",null,null],[13,"Frame4KiB","","The page is mapped to a physical frame of size 4KiB.",39,null],[12,"frame","x86_64::structures::paging::mapper::TranslateResult","The mapped frame.",40,null],[12,"offset","","The offset whithin the mapped frame.",40,null],[13,"Frame2MiB","x86_64::structures::paging::mapper","The page is mapped to a physical frame of size 2MiB.",39,null],[12,"frame","x86_64::structures::paging::mapper::TranslateResult","The mapped frame.",41,null],[12,"offset","","The offset whithin the mapped frame.",41,null],[13,"Frame1GiB","x86_64::structures::paging::mapper","The page is mapped to a physical frame of size 2MiB.",39,null],[12,"frame","x86_64::structures::paging::mapper::TranslateResult","The mapped frame.",42,null],[12,"offset","","The offset whithin the mapped frame.",42,null],[13,"PageNotMapped","x86_64::structures::paging::mapper","The given page is not mapped to a physical frame.",39,null],[13,"InvalidFrameAddress","","The page table entry for the given page points to an…",39,null],[4,"MapToError","","This error is returned from `map_to` and similar methods.",null,null],[13,"FrameAllocationFailed","","An additional frame was needed for the mapping process,…",43,null],[13,"ParentEntryHugePage","","An upper level page table entry has the `HUGE_PAGE` flag…",43,null],[13,"PageAlreadyMapped","","The given page is already mapped to a physical frame.",43,null],[4,"UnmapError","","An error indicating that an `unmap` call failed.",null,null],[13,"ParentEntryHugePage","","An upper level page table entry has the `HUGE_PAGE` flag…",44,null],[13,"PageNotMapped","","The given page is not mapped to a physical frame.",44,null],[13,"InvalidFrameAddress","","The page table entry for the given page points to an…",44,null],[4,"FlagUpdateError","","An error indicating that an `update_flags` call failed.",null,null],[13,"PageNotMapped","","The given page is not mapped to a physical frame.",45,null],[13,"ParentEntryHugePage","","An upper level page table entry has the `HUGE_PAGE` flag…",45,null],[4,"TranslateError","","An error indicating that an `translate` call failed.",null,null],[13,"PageNotMapped","","The given page is not mapped to a physical frame.",46,null],[13,"ParentEntryHugePage","","An upper level page table entry has the `HUGE_PAGE` flag…",46,null],[13,"InvalidFrameAddress","","The page table entry for the given page points to an…",46,null],[11,"new","","Creates a new `MappedPageTable` that uses the passed…",47,[[["pagetable",3]]]],[11,"new","","Creates a new `OffsetPageTable` that uses the given offset…",48,[[["virtaddr",3],["pagetable",3]]]],[11,"new","","Creates a new RecursivePageTable from the passed level 4…",49,[[["pagetable",3]],["result",4]]],[11,"new_unchecked","","Creates a new RecursivePageTable without performing any…",49,[[["pagetableindex",3],["pagetable",3]]]],[8,"PhysToVirt","","Trait for converting a physical address to a virtual one.",null,null],[10,"phys_to_virt","","Translate the given physical frame to a virtual page table…",50,[[["physframe",3]]]],[8,"MapperAllSizes","","This trait defines page table operations that work for all…",null,null],[10,"translate","","Return the frame that the given virtual address is mapped…",51,[[["virtaddr",3]],["translateresult",4]]],[11,"translate_addr","","Translates the given virtual address to the physical…",51,[[["virtaddr",3]],[["option",4],["physaddr",3]]]],[8,"Mapper","","A trait for common page table operations on pages of size…",null,null],[11,"map_to","","Creates a new mapping in the page table.",52,[[["physframe",3],["pagetableflags",3],["page",3]],[["maptoerror",4],["result",4],["mapperflush",3]]]],[10,"map_to_with_table_flags","","Creates a new mapping in the page table.",52,[[["physframe",3],["page",3],["pagetableflags",3]],[["maptoerror",4],["result",4],["mapperflush",3]]]],[10,"unmap","","Removes a mapping from the page table and returns the…",52,[[["page",3]],[["result",4],["unmaperror",4]]]],[10,"update_flags","","Updates the flags of an existing mapping.",52,[[["pagetableflags",3],["page",3]],[["flagupdateerror",4],["result",4],["mapperflush",3]]]],[10,"set_flags_p4_entry","","Set the flags of an existing page level 4 table entry",52,[[["pagetableflags",3],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[10,"set_flags_p3_entry","","Set the flags of an existing page table level 3 entry",52,[[["pagetableflags",3],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[10,"set_flags_p2_entry","","Set the flags of an existing page table level 2 entry",52,[[["pagetableflags",3],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[10,"translate_page","","Return the frame that the specified page is mapped to.",52,[[["page",3]],[["result",4],["translateerror",4],["physframe",3]]]],[11,"identity_map","","Maps the given frame to the virtual page with the same…",52,[[["pagetableflags",3],["physframe",3]],[["maptoerror",4],["result",4],["mapperflush",3]]]],[11,"flush","","Flush the page from the TLB to ensure that the newest…",53,[[]]],[11,"ignore","","Don\'t flush the TLB and silence the “must be used” warning.",53,[[]]],[11,"flush_all","","Flush all pages from the TLB to ensure that the newest…",54,[[]]],[11,"ignore","","Don\'t flush the TLB and silence the “must be used” warning.",54,[[]]],[0,"page","x86_64::structures::paging","Abstractions for default-sized and huge virtual memory…",null,null],[3,"Page","x86_64::structures::paging::page","A virtual memory page.",null,null],[3,"PageRange","","A range of pages with exclusive upper bound.",null,null],[12,"start","","The start of the range, inclusive.",55,null],[12,"end","","The end of the range, exclusive.",55,null],[3,"PageRangeInclusive","","A range of pages with inclusive upper bound.",null,null],[12,"start","","The start of the range, inclusive.",56,null],[12,"end","","The end of the range, inclusive.",56,null],[4,"Size4KiB","","A standard 4KiB page.",null,null],[4,"Size2MiB","","A “huge” 2MiB page.",null,null],[4,"Size1GiB","","A “giant” 1GiB page.",null,null],[8,"PageSize","","Trait for abstracting over the three possible page sizes…",null,null],[18,"SIZE","","The page size in bytes.",57,null],[18,"SIZE_AS_DEBUG_STR","","A string representation of the page size for debug output.",57,null],[8,"NotGiantPageSize","","This trait is implemented for 4KiB and 2MiB pages, but not…",null,null],[18,"SIZE","","The page size in bytes.",58,null],[11,"from_start_address","","Returns the page that starts at the given virtual address.",58,[[["virtaddr",3]],["result",4]]],[11,"from_start_address_unchecked","","Returns the page that starts at the given virtual address.",58,[[["virtaddr",3]]]],[11,"containing_address","","Returns the page that contains the given virtual address.",58,[[["virtaddr",3]]]],[11,"start_address","","Returns the start address of the page.",58,[[],["virtaddr",3]]],[11,"size","","Returns the size the page (4KB, 2MB or 1GB).",58,[[]]],[11,"p4_index","","Returns the level 4 page table index of this page.",58,[[],["pagetableindex",3]]],[11,"p3_index","","Returns the level 3 page table index of this page.",58,[[],["pagetableindex",3]]],[11,"range","","Returns a range of pages, exclusive `end`.",58,[[],["pagerange",3]]],[11,"range_inclusive","","Returns a range of pages, inclusive `end`.",58,[[],["pagerangeinclusive",3]]],[11,"p2_index","","Returns the level 2 page table index of this page.",58,[[],["pagetableindex",3]]],[11,"from_page_table_indices_1gib","","Returns the 1GiB memory page with the specified page table…",58,[[["pagetableindex",3]]]],[11,"from_page_table_indices_2mib","","Returns the 2MiB memory page with the specified page table…",58,[[["pagetableindex",3]]]],[11,"from_page_table_indices","","Returns the 4KiB memory page with the specified page table…",58,[[["pagetableindex",3]]]],[11,"p1_index","","Returns the level 1 page table index of this page.",58,[[],["pagetableindex",3]]],[11,"is_empty","","Returns wether this range contains no pages.",55,[[]]],[11,"as_4kib_page_range","","Converts the range of 2MiB pages to a range of 4KiB pages.",55,[[],[["pagerange",3],["size4kib",4]]]],[11,"is_empty","","Returns wether this range contains no pages.",56,[[]]],[0,"page_table","x86_64::structures::paging","Abstractions for page tables and page table entries.",null,null],[3,"PageTableEntry","x86_64::structures::paging::page_table","A 64-bit page table entry.",null,null],[3,"PageTableFlags","","Possible flags for a page table entry.",null,null],[3,"PageTable","","Represents a page table.",null,null],[3,"PageTableIndex","","A 9-bit index into a page table.",null,null],[3,"PageOffset","","A 12-bit offset into a 4KiB Page.",null,null],[4,"FrameError","","The error returned by the `PageTableEntry::frame` method.",null,null],[13,"FrameNotPresent","","The entry does not have the `PRESENT` flag set, so it…",59,null],[13,"HugeFrame","","The entry does have the `HUGE_PAGE` flag set. The `frame`…",59,null],[11,"new","","Creates an unused page table entry.",60,[[]]],[11,"is_unused","","Returns whether this entry is zero.",60,[[]]],[11,"set_unused","","Sets this entry to zero.",60,[[]]],[11,"flags","","Returns the flags of this entry.",60,[[],["pagetableflags",3]]],[11,"addr","","Returns the physical address mapped by this entry, might…",60,[[],["physaddr",3]]],[11,"frame","","Returns the physical frame mapped by this entry.",60,[[],[["physframe",3],["frameerror",4],["result",4]]]],[11,"set_addr","","Map the entry to the specified physical address with the…",60,[[["pagetableflags",3],["physaddr",3]]]],[11,"set_frame","","Map the entry to the specified physical frame with the…",60,[[["physframe",3],["pagetableflags",3]]]],[11,"set_flags","","Sets the flags of this entry.",60,[[["pagetableflags",3]]]],[18,"PRESENT","","Specifies whether the mapped frame or page table is loaded…",61,null],[18,"WRITABLE","","Controls whether writes to the mapped frames are allowed.",61,null],[18,"USER_ACCESSIBLE","","Controls whether accesses from userspace (i.e. ring 3) are…",61,null],[18,"WRITE_THROUGH","","If this bit is set, a “write-through” policy is used for…",61,null],[18,"NO_CACHE","","Disables caching for the pointed entry is cacheable.",61,null],[18,"ACCESSED","","Set by the CPU when the mapped frame or page table is…",61,null],[18,"DIRTY","","Set by the CPU on a write to the mapped frame.",61,null],[18,"HUGE_PAGE","","Specifies that the entry maps a huge frame instead of a…",61,null],[18,"GLOBAL","","Indicates that the mapping is present in all address…",61,null],[18,"BIT_9","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_10","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_11","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_52","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_53","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_54","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_55","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_56","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_57","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_58","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_59","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_60","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_61","","Available to the OS, can be used to store additional data,…",61,null],[18,"BIT_62","","Available to the OS, can be used to store additional data,…",61,null],[18,"NO_EXECUTE","","Forbid code execution from the mapped frames.",61,null],[11,"empty","","Returns an empty set of flags",61,[[],["pagetableflags",3]]],[11,"all","","Returns the set containing all flags.",61,[[],["pagetableflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",61,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",61,[[],[["option",4],["pagetableflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",61,[[],["pagetableflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",61,[[],["pagetableflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",61,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",61,[[["pagetableflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",61,[[["pagetableflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",61,[[["pagetableflags",3]]]],[11,"remove","","Removes the specified flags in-place.",61,[[["pagetableflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",61,[[["pagetableflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",61,[[["pagetableflags",3]]]],[11,"new","","Creates an empty page table.",62,[[]]],[11,"zero","","Clears all entries.",62,[[]]],[11,"iter","","Returns an iterator over the entries of the page table.",62,[[]]],[11,"iter_mut","","Returns an iterator that allows modifying the entries of…",62,[[]]],[11,"new","","Creates a new index from the given `u16`. Panics if the…",63,[[]]],[11,"new_truncate","","Creates a new index from the given `u16`. Throws away bits…",63,[[]]],[11,"new","","Creates a new offset from the given `u16`. Panics if the…",64,[[]]],[11,"new_truncate","","Creates a new offset from the given `u16`. Throws away…",64,[[]]],[8,"FrameAllocator","x86_64::structures::paging","A trait for types that can allocate a frame of memory.",null,null],[10,"allocate_frame","","Allocate a frame of the appropriate size and return it if…",65,[[],[["option",4],["physframe",3]]]],[8,"FrameDeallocator","","A trait for types that can deallocate a frame of memory.",null,null],[10,"deallocate_frame","","Deallocate the given unused frame.",66,[[["physframe",3]]]],[0,"port","x86_64::structures","Traits for accessing I/O ports.",null,null],[8,"PortRead","x86_64::structures::port","A helper trait that implements the read port operation.",null,null],[10,"read_from_port","","Reads a `Self` value from the given port.",67,[[]]],[8,"PortWrite","","A helper trait that implements the write port operation.",null,null],[10,"write_to_port","","Writes a `Self` value to the given port.",68,[[]]],[8,"PortReadWrite","","A helper trait that implements the read/write port…",null,null],[0,"tss","x86_64::structures","Provides a type for the task state segment structure.",null,null],[3,"TaskStateSegment","x86_64::structures::tss","In 64-bit mode the TSS holds information that is not…",null,null],[12,"privilege_stack_table","","The full 64-bit canonical forms of the stack pointers…",69,null],[12,"interrupt_stack_table","","The full 64-bit canonical forms of the interrupt stack…",69,null],[12,"iomap_base","","The 16-bit offset to the I/O permission bit map from the…",69,null],[11,"new","","Creates a new TSS with zeroed privilege and interrupt…",69,[[],["taskstatesegment",3]]],[11,"from_u16","x86_64","Creates a `PrivilegeLevel` from a numeric value. The value…",0,[[],["privilegelevel",4]]],[14,"software_interrupt","","Generate a software interrupt by invoking the `int`…",null,null],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","x86_64::addr","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","x86_64::instructions::port","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","x86_64::instructions::random","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","x86_64::registers::control","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","x86_64::registers::model_specific","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","x86_64::registers::rflags","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","x86_64::structures","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","x86_64::structures::gdt","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","x86_64::structures::idt","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","x86_64::structures::paging","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","x86_64::structures::paging::frame","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","x86_64::structures::paging::mapper","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","x86_64::structures::paging::page","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","x86_64::structures::paging::page_table","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","x86_64::structures::tss","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"translate","x86_64::structures::paging::mapper","",47,[[["virtaddr",3]],["translateresult",4]]],[11,"translate","","",48,[[["virtaddr",3]],["translateresult",4]]],[11,"translate","","",49,[[["virtaddr",3]],["translateresult",4]]],[11,"map_to_with_table_flags","","",47,[[["page",3],["physframe",3],["pagetableflags",3],["size1gib",4]],[["mapperflush",3],["result",4],["maptoerror",4]]]],[11,"unmap","","",47,[[["page",3],["size1gib",4]],[["unmaperror",4],["result",4]]]],[11,"update_flags","","",47,[[["page",3],["pagetableflags",3],["size1gib",4]],[["result",4],["mapperflush",3],["flagupdateerror",4]]]],[11,"set_flags_p4_entry","","",47,[[["page",3],["pagetableflags",3],["size1gib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p3_entry","","",47,[[["page",3],["pagetableflags",3],["size1gib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p2_entry","","",47,[[["page",3],["pagetableflags",3],["size1gib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"translate_page","","",47,[[["page",3],["size1gib",4]],[["result",4],["physframe",3],["translateerror",4]]]],[11,"map_to_with_table_flags","","",47,[[["page",3],["size2mib",4],["physframe",3],["pagetableflags",3]],[["mapperflush",3],["maptoerror",4],["result",4]]]],[11,"unmap","","",47,[[["page",3],["size2mib",4]],[["unmaperror",4],["result",4]]]],[11,"update_flags","","",47,[[["page",3],["pagetableflags",3],["size2mib",4]],[["result",4],["mapperflush",3],["flagupdateerror",4]]]],[11,"set_flags_p4_entry","","",47,[[["page",3],["pagetableflags",3],["size2mib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p3_entry","","",47,[[["page",3],["pagetableflags",3],["size2mib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p2_entry","","",47,[[["page",3],["pagetableflags",3],["size2mib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"translate_page","","",47,[[["page",3],["size2mib",4]],[["result",4],["physframe",3],["translateerror",4]]]],[11,"map_to_with_table_flags","","",47,[[["pagetableflags",3],["page",3],["size4kib",4],["physframe",3]],[["maptoerror",4],["mapperflush",3],["result",4]]]],[11,"unmap","","",47,[[["size4kib",4],["page",3]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",47,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflush",3]]]],[11,"set_flags_p4_entry","","",47,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p3_entry","","",47,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p2_entry","","",47,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"translate_page","","",47,[[["size4kib",4],["page",3]],[["physframe",3],["translateerror",4],["result",4]]]],[11,"map_to_with_table_flags","","",48,[[["page",3],["physframe",3],["pagetableflags",3],["size1gib",4]],[["mapperflush",3],["result",4],["maptoerror",4]]]],[11,"unmap","","",48,[[["page",3],["size1gib",4]],[["unmaperror",4],["result",4]]]],[11,"update_flags","","",48,[[["page",3],["pagetableflags",3],["size1gib",4]],[["result",4],["mapperflush",3],["flagupdateerror",4]]]],[11,"set_flags_p4_entry","","",48,[[["page",3],["pagetableflags",3],["size1gib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p3_entry","","",48,[[["page",3],["pagetableflags",3],["size1gib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p2_entry","","",48,[[["page",3],["pagetableflags",3],["size1gib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"translate_page","","",48,[[["page",3],["size1gib",4]],[["result",4],["physframe",3],["translateerror",4]]]],[11,"map_to_with_table_flags","","",48,[[["page",3],["size2mib",4],["physframe",3],["pagetableflags",3]],[["mapperflush",3],["maptoerror",4],["result",4]]]],[11,"unmap","","",48,[[["page",3],["size2mib",4]],[["unmaperror",4],["result",4]]]],[11,"update_flags","","",48,[[["page",3],["pagetableflags",3],["size2mib",4]],[["result",4],["mapperflush",3],["flagupdateerror",4]]]],[11,"set_flags_p4_entry","","",48,[[["page",3],["pagetableflags",3],["size2mib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p3_entry","","",48,[[["page",3],["pagetableflags",3],["size2mib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p2_entry","","",48,[[["page",3],["pagetableflags",3],["size2mib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"translate_page","","",48,[[["page",3],["size2mib",4]],[["result",4],["physframe",3],["translateerror",4]]]],[11,"map_to_with_table_flags","","",48,[[["pagetableflags",3],["page",3],["size4kib",4],["physframe",3]],[["maptoerror",4],["mapperflush",3],["result",4]]]],[11,"unmap","","",48,[[["size4kib",4],["page",3]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",48,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflush",3]]]],[11,"set_flags_p4_entry","","",48,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p3_entry","","",48,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p2_entry","","",48,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"translate_page","","",48,[[["size4kib",4],["page",3]],[["physframe",3],["translateerror",4],["result",4]]]],[11,"map_to_with_table_flags","","",49,[[["page",3],["physframe",3],["pagetableflags",3],["size1gib",4]],[["mapperflush",3],["result",4],["maptoerror",4]]]],[11,"unmap","","",49,[[["page",3],["size1gib",4]],[["unmaperror",4],["result",4]]]],[11,"update_flags","","",49,[[["page",3],["pagetableflags",3],["size1gib",4]],[["result",4],["mapperflush",3],["flagupdateerror",4]]]],[11,"set_flags_p4_entry","","",49,[[["page",3],["pagetableflags",3],["size1gib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p3_entry","","",49,[[["page",3],["pagetableflags",3],["size1gib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p2_entry","","",49,[[["page",3],["pagetableflags",3],["size1gib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"translate_page","","",49,[[["page",3],["size1gib",4]],[["result",4],["physframe",3],["translateerror",4]]]],[11,"map_to_with_table_flags","","",49,[[["page",3],["size2mib",4],["physframe",3],["pagetableflags",3]],[["mapperflush",3],["maptoerror",4],["result",4]]]],[11,"unmap","","",49,[[["page",3],["size2mib",4]],[["unmaperror",4],["result",4]]]],[11,"update_flags","","",49,[[["page",3],["pagetableflags",3],["size2mib",4]],[["result",4],["mapperflush",3],["flagupdateerror",4]]]],[11,"set_flags_p4_entry","","",49,[[["page",3],["pagetableflags",3],["size2mib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p3_entry","","",49,[[["page",3],["pagetableflags",3],["size2mib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p2_entry","","",49,[[["page",3],["pagetableflags",3],["size2mib",4]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"translate_page","","",49,[[["page",3],["size2mib",4]],[["result",4],["physframe",3],["translateerror",4]]]],[11,"map_to_with_table_flags","","",49,[[["pagetableflags",3],["page",3],["size4kib",4],["physframe",3]],[["maptoerror",4],["mapperflush",3],["result",4]]]],[11,"unmap","","",49,[[["size4kib",4],["page",3]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",49,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflush",3]]]],[11,"set_flags_p4_entry","","",49,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p3_entry","","",49,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"set_flags_p2_entry","","",49,[[["pagetableflags",3],["size4kib",4],["page",3]],[["flagupdateerror",4],["result",4],["mapperflushall",3]]]],[11,"translate_page","","",49,[[["size4kib",4],["page",3]],[["physframe",3],["translateerror",4],["result",4]]]],[11,"deref","x86_64::structures::idt","",33,[[]]],[11,"deref","x86_64::structures::paging","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"fmt","x86_64::addr","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::instructions::port","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::instructions::random","",6,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",23,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::frame","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging","",38,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::mapper","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::tss","",69,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures","",24,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64","",0,[[["formatter",3]],["result",6]]],[11,"sub","x86_64::addr","",1,[[]]],[11,"sub","","",1,[[]]],[11,"sub","","",1,[[["virtaddr",3]]]],[11,"sub","","",2,[[]]],[11,"sub","","",2,[[]]],[11,"sub","","",2,[[["physaddr",3]]]],[11,"sub","x86_64::registers::control","Returns the set difference of the two sets of flags.",11,[[["cr0flags",3]],["cr0flags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["cr3flags",3]],["cr3flags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["cr4flags",3]],["cr4flags",3]]],[11,"sub","x86_64::registers::model_specific","Returns the set difference of the two sets of flags.",22,[[["eferflags",3]],["eferflags",3]]],[11,"sub","x86_64::registers::rflags","Returns the set difference of the two sets of flags.",23,[[["rflags",3]],["rflags",3]]],[11,"sub","x86_64::structures::gdt","Returns the set difference of the two sets of flags.",28,[[["descriptorflags",3]],["descriptorflags",3]]],[11,"sub","x86_64::structures::idt","Returns the set difference of the two sets of flags.",34,[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]]],[11,"sub","x86_64::structures::paging::frame","",37,[[]]],[11,"sub","","",37,[[["physframe",3]]]],[11,"sub","x86_64::structures::paging::page","",58,[[]]],[11,"sub","","",58,[[]]],[11,"sub","x86_64::structures::paging::page_table","Returns the set difference of the two sets of flags.",61,[[["pagetableflags",3]],["pagetableflags",3]]],[11,"eq","x86_64::addr","",1,[[["virtaddr",3]]]],[11,"ne","","",1,[[["virtaddr",3]]]],[11,"eq","","",2,[[["physaddr",3]]]],[11,"ne","","",2,[[["physaddr",3]]]],[11,"eq","x86_64::instructions::port","",3,[[["portreadonly",3]]]],[11,"ne","","",3,[[["portreadonly",3]]]],[11,"eq","","",4,[[["portwriteonly",3]]]],[11,"ne","","",4,[[["portwriteonly",3]]]],[11,"eq","","",5,[[["port",3]]]],[11,"ne","","",5,[[["port",3]]]],[11,"eq","x86_64::registers::control","",11,[[["cr0flags",3]]]],[11,"ne","","",11,[[["cr0flags",3]]]],[11,"eq","","",12,[[["cr3flags",3]]]],[11,"ne","","",12,[[["cr3flags",3]]]],[11,"eq","","",13,[[["cr4flags",3]]]],[11,"ne","","",13,[[["cr4flags",3]]]],[11,"eq","x86_64::registers::model_specific","",22,[[["eferflags",3]]]],[11,"ne","","",22,[[["eferflags",3]]]],[11,"eq","x86_64::registers::rflags","",23,[[["rflags",3]]]],[11,"ne","","",23,[[["rflags",3]]]],[11,"eq","x86_64::structures::gdt","",25,[[["segmentselector",3]]]],[11,"ne","","",25,[[["segmentselector",3]]]],[11,"eq","","",28,[[["descriptorflags",3]]]],[11,"ne","","",28,[[["descriptorflags",3]]]],[11,"eq","x86_64::structures::idt","",31,[[["entry",3]]]],[11,"ne","","",31,[[["entry",3]]]],[11,"eq","","",32,[[["entryoptions",3]]]],[11,"ne","","",32,[[["entryoptions",3]]]],[11,"eq","","",34,[[["pagefaulterrorcode",3]]]],[11,"ne","","",34,[[["pagefaulterrorcode",3]]]],[11,"eq","x86_64::structures::paging::frame","",37,[[["physframe",3]]]],[11,"ne","","",37,[[["physframe",3]]]],[11,"eq","","",35,[[["physframerange",3]]]],[11,"ne","","",35,[[["physframerange",3]]]],[11,"eq","","",36,[[["physframerangeinclusive",3]]]],[11,"ne","","",36,[[["physframerangeinclusive",3]]]],[11,"eq","x86_64::structures::paging::page","",72,[[["size4kib",4]]]],[11,"eq","","",73,[[["size2mib",4]]]],[11,"eq","","",74,[[["size1gib",4]]]],[11,"eq","","",58,[[["page",3]]]],[11,"ne","","",58,[[["page",3]]]],[11,"eq","","",55,[[["pagerange",3]]]],[11,"ne","","",55,[[["pagerange",3]]]],[11,"eq","","",56,[[["pagerangeinclusive",3]]]],[11,"ne","","",56,[[["pagerangeinclusive",3]]]],[11,"eq","x86_64::structures::paging::page_table","",59,[[["frameerror",4]]]],[11,"eq","","",61,[[["pagetableflags",3]]]],[11,"ne","","",61,[[["pagetableflags",3]]]],[11,"eq","","",63,[[["pagetableindex",3]]]],[11,"ne","","",63,[[["pagetableindex",3]]]],[11,"eq","","",64,[[["pageoffset",3]]]],[11,"ne","","",64,[[["pageoffset",3]]]],[11,"eq","x86_64","",0,[[["privilegelevel",4]]]],[11,"cmp","x86_64::addr","",1,[[["virtaddr",3]],["ordering",4]]],[11,"cmp","","",2,[[["physaddr",3]],["ordering",4]]],[11,"cmp","x86_64::registers::control","",11,[[["cr0flags",3]],["ordering",4]]],[11,"cmp","","",12,[[["cr3flags",3]],["ordering",4]]],[11,"cmp","","",13,[[["cr4flags",3]],["ordering",4]]],[11,"cmp","x86_64::registers::model_specific","",22,[[["eferflags",3]],["ordering",4]]],[11,"cmp","x86_64::registers::rflags","",23,[[["rflags",3]],["ordering",4]]],[11,"cmp","x86_64::structures::gdt","",28,[[["descriptorflags",3]],["ordering",4]]],[11,"cmp","x86_64::structures::idt","",34,[[["pagefaulterrorcode",3]],["ordering",4]]],[11,"cmp","x86_64::structures::paging::frame","",37,[[["physframe",3]],["ordering",4]]],[11,"cmp","x86_64::structures::paging::page","",72,[[["size4kib",4]],["ordering",4]]],[11,"cmp","","",73,[[["size2mib",4]],["ordering",4]]],[11,"cmp","","",74,[[["size1gib",4]],["ordering",4]]],[11,"cmp","","",58,[[["page",3]],["ordering",4]]],[11,"cmp","x86_64::structures::paging::page_table","",61,[[["pagetableflags",3]],["ordering",4]]],[11,"cmp","","",63,[[["pagetableindex",3]],["ordering",4]]],[11,"cmp","","",64,[[["pageoffset",3]],["ordering",4]]],[11,"partial_cmp","x86_64::addr","",1,[[["virtaddr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["virtaddr",3]]]],[11,"le","","",1,[[["virtaddr",3]]]],[11,"gt","","",1,[[["virtaddr",3]]]],[11,"ge","","",1,[[["virtaddr",3]]]],[11,"partial_cmp","","",2,[[["physaddr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["physaddr",3]]]],[11,"le","","",2,[[["physaddr",3]]]],[11,"gt","","",2,[[["physaddr",3]]]],[11,"ge","","",2,[[["physaddr",3]]]],[11,"partial_cmp","x86_64::registers::control","",11,[[["cr0flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["cr0flags",3]]]],[11,"le","","",11,[[["cr0flags",3]]]],[11,"gt","","",11,[[["cr0flags",3]]]],[11,"ge","","",11,[[["cr0flags",3]]]],[11,"partial_cmp","","",12,[[["cr3flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["cr3flags",3]]]],[11,"le","","",12,[[["cr3flags",3]]]],[11,"gt","","",12,[[["cr3flags",3]]]],[11,"ge","","",12,[[["cr3flags",3]]]],[11,"partial_cmp","","",13,[[["cr4flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["cr4flags",3]]]],[11,"le","","",13,[[["cr4flags",3]]]],[11,"gt","","",13,[[["cr4flags",3]]]],[11,"ge","","",13,[[["cr4flags",3]]]],[11,"partial_cmp","x86_64::registers::model_specific","",22,[[["eferflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["eferflags",3]]]],[11,"le","","",22,[[["eferflags",3]]]],[11,"gt","","",22,[[["eferflags",3]]]],[11,"ge","","",22,[[["eferflags",3]]]],[11,"partial_cmp","x86_64::registers::rflags","",23,[[["rflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["rflags",3]]]],[11,"le","","",23,[[["rflags",3]]]],[11,"gt","","",23,[[["rflags",3]]]],[11,"ge","","",23,[[["rflags",3]]]],[11,"partial_cmp","x86_64::structures::gdt","",28,[[["descriptorflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",28,[[["descriptorflags",3]]]],[11,"le","","",28,[[["descriptorflags",3]]]],[11,"gt","","",28,[[["descriptorflags",3]]]],[11,"ge","","",28,[[["descriptorflags",3]]]],[11,"partial_cmp","x86_64::structures::idt","",34,[[["pagefaulterrorcode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",34,[[["pagefaulterrorcode",3]]]],[11,"le","","",34,[[["pagefaulterrorcode",3]]]],[11,"gt","","",34,[[["pagefaulterrorcode",3]]]],[11,"ge","","",34,[[["pagefaulterrorcode",3]]]],[11,"partial_cmp","x86_64::structures::paging::frame","",37,[[["physframe",3]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["physframe",3]]]],[11,"le","","",37,[[["physframe",3]]]],[11,"gt","","",37,[[["physframe",3]]]],[11,"ge","","",37,[[["physframe",3]]]],[11,"partial_cmp","x86_64::structures::paging::page","",72,[[["size4kib",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",73,[[["size2mib",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",74,[[["size1gib",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",58,[[["page",3]],[["option",4],["ordering",4]]]],[11,"lt","","",58,[[["page",3]]]],[11,"le","","",58,[[["page",3]]]],[11,"gt","","",58,[[["page",3]]]],[11,"ge","","",58,[[["page",3]]]],[11,"partial_cmp","x86_64::structures::paging::page_table","",61,[[["pagetableflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",61,[[["pagetableflags",3]]]],[11,"le","","",61,[[["pagetableflags",3]]]],[11,"gt","","",61,[[["pagetableflags",3]]]],[11,"ge","","",61,[[["pagetableflags",3]]]],[11,"partial_cmp","","",63,[[["pagetableindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",63,[[["pagetableindex",3]]]],[11,"le","","",63,[[["pagetableindex",3]]]],[11,"gt","","",63,[[["pagetableindex",3]]]],[11,"ge","","",63,[[["pagetableindex",3]]]],[11,"partial_cmp","","",64,[[["pageoffset",3]],[["option",4],["ordering",4]]]],[11,"lt","","",64,[[["pageoffset",3]]]],[11,"le","","",64,[[["pageoffset",3]]]],[11,"gt","","",64,[[["pageoffset",3]]]],[11,"ge","","",64,[[["pageoffset",3]]]],[11,"add","x86_64::addr","",1,[[]]],[11,"add","","",1,[[]]],[11,"add","","",2,[[]]],[11,"add","","",2,[[]]],[11,"add","x86_64::structures::paging::frame","",37,[[]]],[11,"add","x86_64::structures::paging::page","",58,[[]]],[11,"add_assign","x86_64::addr","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","x86_64::structures::paging::frame","",37,[[]]],[11,"add_assign","x86_64::structures::paging::page","",58,[[]]],[11,"sub_assign","x86_64::addr","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","x86_64::registers::control","Disables all flags enabled in the set.",11,[[["cr0flags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["cr3flags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["cr4flags",3]]]],[11,"sub_assign","x86_64::registers::model_specific","Disables all flags enabled in the set.",22,[[["eferflags",3]]]],[11,"sub_assign","x86_64::registers::rflags","Disables all flags enabled in the set.",23,[[["rflags",3]]]],[11,"sub_assign","x86_64::structures::gdt","Disables all flags enabled in the set.",28,[[["descriptorflags",3]]]],[11,"sub_assign","x86_64::structures::idt","Disables all flags enabled in the set.",34,[[["pagefaulterrorcode",3]]]],[11,"sub_assign","x86_64::structures::paging::frame","",37,[[]]],[11,"sub_assign","x86_64::structures::paging::page","",58,[[]]],[11,"sub_assign","x86_64::structures::paging::page_table","Disables all flags enabled in the set.",61,[[["pagetableflags",3]]]],[11,"not","x86_64::registers::control","Returns the complement of this set of flags.",11,[[],["cr0flags",3]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["cr3flags",3]]],[11,"not","","Returns the complement of this set of flags.",13,[[],["cr4flags",3]]],[11,"not","x86_64::registers::model_specific","Returns the complement of this set of flags.",22,[[],["eferflags",3]]],[11,"not","x86_64::registers::rflags","Returns the complement of this set of flags.",23,[[],["rflags",3]]],[11,"not","x86_64::structures::gdt","Returns the complement of this set of flags.",28,[[],["descriptorflags",3]]],[11,"not","x86_64::structures::idt","Returns the complement of this set of flags.",34,[[],["pagefaulterrorcode",3]]],[11,"not","x86_64::structures::paging::page_table","Returns the complement of this set of flags.",61,[[],["pagetableflags",3]]],[11,"bitand","x86_64::registers::control","Returns the intersection between the two sets of flags.",11,[[["cr0flags",3]],["cr0flags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["cr3flags",3]],["cr3flags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["cr4flags",3]],["cr4flags",3]]],[11,"bitand","x86_64::registers::model_specific","Returns the intersection between the two sets of flags.",22,[[["eferflags",3]],["eferflags",3]]],[11,"bitand","x86_64::registers::rflags","Returns the intersection between the two sets of flags.",23,[[["rflags",3]],["rflags",3]]],[11,"bitand","x86_64::structures::gdt","Returns the intersection between the two sets of flags.",28,[[["descriptorflags",3]],["descriptorflags",3]]],[11,"bitand","x86_64::structures::idt","Returns the intersection between the two sets of flags.",34,[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]]],[11,"bitand","x86_64::structures::paging::page_table","Returns the intersection between the two sets of flags.",61,[[["pagetableflags",3]],["pagetableflags",3]]],[11,"bitor","x86_64::registers::control","Returns the union of the two sets of flags.",11,[[["cr0flags",3]],["cr0flags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["cr3flags",3]],["cr3flags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["cr4flags",3]],["cr4flags",3]]],[11,"bitor","x86_64::registers::model_specific","Returns the union of the two sets of flags.",22,[[["eferflags",3]],["eferflags",3]]],[11,"bitor","x86_64::registers::rflags","Returns the union of the two sets of flags.",23,[[["rflags",3]],["rflags",3]]],[11,"bitor","x86_64::structures::gdt","Returns the union of the two sets of flags.",28,[[["descriptorflags",3]],["descriptorflags",3]]],[11,"bitor","x86_64::structures::idt","Returns the union of the two sets of flags.",34,[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]]],[11,"bitor","x86_64::structures::paging::page_table","Returns the union of the two sets of flags.",61,[[["pagetableflags",3]],["pagetableflags",3]]],[11,"bitxor","x86_64::registers::control","Returns the left flags, but with all the right flags…",11,[[["cr0flags",3]],["cr0flags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",12,[[["cr3flags",3]],["cr3flags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",13,[[["cr4flags",3]],["cr4flags",3]]],[11,"bitxor","x86_64::registers::model_specific","Returns the left flags, but with all the right flags…",22,[[["eferflags",3]],["eferflags",3]]],[11,"bitxor","x86_64::registers::rflags","Returns the left flags, but with all the right flags…",23,[[["rflags",3]],["rflags",3]]],[11,"bitxor","x86_64::structures::gdt","Returns the left flags, but with all the right flags…",28,[[["descriptorflags",3]],["descriptorflags",3]]],[11,"bitxor","x86_64::structures::idt","Returns the left flags, but with all the right flags…",34,[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]]],[11,"bitxor","x86_64::structures::paging::page_table","Returns the left flags, but with all the right flags…",61,[[["pagetableflags",3]],["pagetableflags",3]]],[11,"bitand_assign","x86_64::registers::control","Disables all flags disabled in the set.",11,[[["cr0flags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["cr3flags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["cr4flags",3]]]],[11,"bitand_assign","x86_64::registers::model_specific","Disables all flags disabled in the set.",22,[[["eferflags",3]]]],[11,"bitand_assign","x86_64::registers::rflags","Disables all flags disabled in the set.",23,[[["rflags",3]]]],[11,"bitand_assign","x86_64::structures::gdt","Disables all flags disabled in the set.",28,[[["descriptorflags",3]]]],[11,"bitand_assign","x86_64::structures::idt","Disables all flags disabled in the set.",34,[[["pagefaulterrorcode",3]]]],[11,"bitand_assign","x86_64::structures::paging::page_table","Disables all flags disabled in the set.",61,[[["pagetableflags",3]]]],[11,"bitor_assign","x86_64::registers::control","Adds the set of flags.",11,[[["cr0flags",3]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["cr3flags",3]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["cr4flags",3]]]],[11,"bitor_assign","x86_64::registers::model_specific","Adds the set of flags.",22,[[["eferflags",3]]]],[11,"bitor_assign","x86_64::registers::rflags","Adds the set of flags.",23,[[["rflags",3]]]],[11,"bitor_assign","x86_64::structures::gdt","Adds the set of flags.",28,[[["descriptorflags",3]]]],[11,"bitor_assign","x86_64::structures::idt","Adds the set of flags.",34,[[["pagefaulterrorcode",3]]]],[11,"bitor_assign","x86_64::structures::paging::page_table","Adds the set of flags.",61,[[["pagetableflags",3]]]],[11,"bitxor_assign","x86_64::registers::control","Toggles the set of flags.",11,[[["cr0flags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["cr3flags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["cr4flags",3]]]],[11,"bitxor_assign","x86_64::registers::model_specific","Toggles the set of flags.",22,[[["eferflags",3]]]],[11,"bitxor_assign","x86_64::registers::rflags","Toggles the set of flags.",23,[[["rflags",3]]]],[11,"bitxor_assign","x86_64::structures::gdt","Toggles the set of flags.",28,[[["descriptorflags",3]]]],[11,"bitxor_assign","x86_64::structures::idt","Toggles the set of flags.",34,[[["pagefaulterrorcode",3]]]],[11,"bitxor_assign","x86_64::structures::paging::page_table","Toggles the set of flags.",61,[[["pagetableflags",3]]]],[11,"index","x86_64::structures::idt","Returns the IDT entry with the specified index.",29,[[]]],[11,"index","x86_64::structures::paging::page_table","",62,[[]]],[11,"index","","",62,[[["pagetableindex",3]]]],[11,"index_mut","x86_64::structures::idt","Returns a mutable reference to the IDT entry with the…",29,[[]]],[11,"index_mut","x86_64::structures::paging::page_table","",62,[[]]],[11,"index_mut","","",62,[[["pagetableindex",3]]]],[11,"hash","x86_64::registers::control","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","x86_64::registers::model_specific","",22,[[]]],[11,"hash","x86_64::registers::rflags","",23,[[]]],[11,"hash","x86_64::structures::gdt","",28,[[]]],[11,"hash","x86_64::structures::idt","",34,[[]]],[11,"hash","x86_64::structures::paging::page_table","",61,[[]]],[11,"next","x86_64::structures::paging::frame","",35,[[],["option",4]]],[11,"next","","",36,[[],["option",4]]],[11,"next","x86_64::structures::paging::page","",55,[[],["option",4]]],[11,"next","","",56,[[],["option",4]]],[11,"extend","x86_64::registers::control","",11,[[["intoiterator",8]]]],[11,"extend","","",12,[[["intoiterator",8]]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","x86_64::registers::model_specific","",22,[[["intoiterator",8]]]],[11,"extend","x86_64::registers::rflags","",23,[[["intoiterator",8]]]],[11,"extend","x86_64::structures::gdt","",28,[[["intoiterator",8]]]],[11,"extend","x86_64::structures::idt","",34,[[["intoiterator",8]]]],[11,"extend","x86_64::structures::paging::page_table","",61,[[["intoiterator",8]]]],[11,"from_iter","x86_64::registers::control","",11,[[["intoiterator",8]],["cr0flags",3]]],[11,"from_iter","","",12,[[["intoiterator",8]],["cr3flags",3]]],[11,"from_iter","","",13,[[["intoiterator",8]],["cr4flags",3]]],[11,"from_iter","x86_64::registers::model_specific","",22,[[["intoiterator",8]],["eferflags",3]]],[11,"from_iter","x86_64::registers::rflags","",23,[[["intoiterator",8]],["rflags",3]]],[11,"from_iter","x86_64::structures::gdt","",28,[[["intoiterator",8]],["descriptorflags",3]]],[11,"from_iter","x86_64::structures::idt","",34,[[["intoiterator",8]],["pagefaulterrorcode",3]]],[11,"from_iter","x86_64::structures::paging::page_table","",61,[[["intoiterator",8]],["pagetableflags",3]]],[11,"fmt","x86_64::addr","",2,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",22,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",23,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",28,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",34,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",61,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::addr","",2,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",22,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",23,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",28,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",34,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",61,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::addr","",2,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",22,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",23,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",28,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",34,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",61,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::addr","",2,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",22,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",23,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",28,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",34,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",61,[[["formatter",3]],["result",6]]],[11,"clone","x86_64::addr","",1,[[],["virtaddr",3]]],[11,"clone","","",2,[[],["physaddr",3]]],[11,"clone","x86_64::instructions::port","",3,[[],["portreadonly",3]]],[11,"clone","","",4,[[],["portwriteonly",3]]],[11,"clone","","",5,[[],["port",3]]],[11,"clone","x86_64::instructions::random","",6,[[],["rdrand",3]]],[11,"clone","x86_64::registers::control","",11,[[],["cr0flags",3]]],[11,"clone","","",12,[[],["cr3flags",3]]],[11,"clone","","",13,[[],["cr4flags",3]]],[11,"clone","x86_64::registers::model_specific","",22,[[],["eferflags",3]]],[11,"clone","x86_64::registers::rflags","",23,[[],["rflags",3]]],[11,"clone","x86_64::structures::gdt","",25,[[],["segmentselector",3]]],[11,"clone","","",27,[[],["globaldescriptortable",3]]],[11,"clone","","",26,[[],["descriptor",4]]],[11,"clone","","",28,[[],["descriptorflags",3]]],[11,"clone","x86_64::structures::idt","",29,[[],["interruptdescriptortable",3]]],[11,"clone","","",31,[[],["entry",3]]],[11,"clone","","",32,[[],["entryoptions",3]]],[11,"clone","","",30,[[],["interruptstackframevalue",3]]],[11,"clone","","",34,[[],["pagefaulterrorcode",3]]],[11,"clone","x86_64::structures::paging::frame","",37,[[],["physframe",3]]],[11,"clone","","",35,[[],["physframerange",3]]],[11,"clone","","",36,[[],["physframerangeinclusive",3]]],[11,"clone","x86_64::structures::paging::page","",72,[[],["size4kib",4]]],[11,"clone","","",73,[[],["size2mib",4]]],[11,"clone","","",74,[[],["size1gib",4]]],[11,"clone","","",58,[[],["page",3]]],[11,"clone","","",55,[[],["pagerange",3]]],[11,"clone","","",56,[[],["pagerangeinclusive",3]]],[11,"clone","x86_64::structures::paging::page_table","",59,[[],["frameerror",4]]],[11,"clone","","",60,[[],["pagetableentry",3]]],[11,"clone","","",61,[[],["pagetableflags",3]]],[11,"clone","","",63,[[],["pagetableindex",3]]],[11,"clone","","",64,[[],["pageoffset",3]]],[11,"clone","x86_64::structures::tss","",69,[[],["taskstatesegment",3]]],[11,"clone","x86_64::structures","",24,[[],["descriptortablepointer",3]]],[11,"clone","x86_64","",0,[[],["privilegelevel",4]]]],"p":[[4,"PrivilegeLevel"],[3,"VirtAddr"],[3,"PhysAddr"],[3,"PortReadOnly"],[3,"PortWriteOnly"],[3,"Port"],[3,"RdRand"],[3,"Cr0"],[3,"Cr2"],[3,"Cr3"],[3,"Cr4"],[3,"Cr0Flags"],[3,"Cr3Flags"],[3,"Cr4Flags"],[3,"Msr"],[3,"Efer"],[3,"FsBase"],[3,"GsBase"],[3,"KernelGsBase"],[3,"Star"],[3,"LStar"],[3,"SFMask"],[3,"EferFlags"],[3,"RFlags"],[3,"DescriptorTablePointer"],[3,"SegmentSelector"],[4,"Descriptor"],[3,"GlobalDescriptorTable"],[3,"DescriptorFlags"],[3,"InterruptDescriptorTable"],[3,"InterruptStackFrameValue"],[3,"Entry"],[3,"EntryOptions"],[3,"InterruptStackFrame"],[3,"PageFaultErrorCode"],[3,"PhysFrameRange"],[3,"PhysFrameRangeInclusive"],[3,"PhysFrame"],[3,"UnusedPhysFrame"],[4,"TranslateResult"],[13,"Frame4KiB"],[13,"Frame2MiB"],[13,"Frame1GiB"],[4,"MapToError"],[4,"UnmapError"],[4,"FlagUpdateError"],[4,"TranslateError"],[3,"MappedPageTable"],[3,"OffsetPageTable"],[3,"RecursivePageTable"],[8,"PhysToVirt"],[8,"MapperAllSizes"],[8,"Mapper"],[3,"MapperFlush"],[3,"MapperFlushAll"],[3,"PageRange"],[3,"PageRangeInclusive"],[8,"PageSize"],[3,"Page"],[4,"FrameError"],[3,"PageTableEntry"],[3,"PageTableFlags"],[3,"PageTable"],[3,"PageTableIndex"],[3,"PageOffset"],[8,"FrameAllocator"],[8,"FrameDeallocator"],[8,"PortRead"],[8,"PortWrite"],[3,"TaskStateSegment"],[3,"VirtAddrNotValid"],[3,"PhysAddrNotValid"],[4,"Size4KiB"],[4,"Size2MiB"],[4,"Size1GiB"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);